{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport dayjs from 'dayjs';\nimport Color from \"./Color\";\nimport { TIME_FORMAT } from \"./Constant\";\nimport { StylePropType } from \"./utils\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar _StyleSheet$create = StyleSheet.create({\n  containerStyle: {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 5\n  }\n}),\n    containerStyle = _StyleSheet$create.containerStyle;\n\nvar _StyleSheet$create2 = StyleSheet.create({\n  textStyle: {\n    fontSize: 10,\n    backgroundColor: 'transparent',\n    textAlign: 'right'\n  }\n}),\n    textStyle = _StyleSheet$create2.textStyle;\n\nvar styles = {\n  left: StyleSheet.create({\n    container: _objectSpread({}, containerStyle),\n    text: _objectSpread({\n      color: Color.timeTextColor\n    }, textStyle)\n  }),\n  right: StyleSheet.create({\n    container: _objectSpread({}, containerStyle),\n    text: _objectSpread({\n      color: Color.white\n    }, textStyle)\n  })\n};\nexport function Time(_ref) {\n  var _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'left' : _ref$position,\n      containerStyle = _ref.containerStyle,\n      currentMessage = _ref.currentMessage,\n      _ref$timeFormat = _ref.timeFormat,\n      timeFormat = _ref$timeFormat === void 0 ? TIME_FORMAT : _ref$timeFormat,\n      timeTextStyle = _ref.timeTextStyle;\n\n  var _useChatContext = useChatContext(),\n      getLocale = _useChatContext.getLocale;\n\n  if (currentMessage == null) {\n    return null;\n  }\n\n  return _jsx(View, {\n    style: [styles[position].container, containerStyle && containerStyle[position]],\n    children: _jsx(Text, {\n      style: [styles[position].text, timeTextStyle && timeTextStyle[position]],\n      children: dayjs(currentMessage.createdAt).locale(getLocale()).format(timeFormat)\n    })\n  });\n}\nTime.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  timeFormat: PropTypes.string,\n  timeTextStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  })\n};","map":{"version":3,"sources":["../src/Time.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;;;;AAEA,OAAO,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAP;AACA,SAAS,WAAT;AAEA,SAAS,aAAT;AACA,SAAS,cAAT;;;AAEA,yBAA2B,UAAU,CAAC,MAAX,CAAkB;EAC3C,cAAc,EAAE;IACd,UAAU,EAAE,EADE;IAEd,WAAW,EAAE,EAFC;IAGd,YAAY,EAAE;EAHA;AAD2B,CAAlB,CAA3B;AAAA,IAAQ,cAAR,sBAAQ,cAAR;;AAOA,0BAAsB,UAAU,CAAC,MAAX,CAAkB;EACtC,SAAS,EAAE;IACT,QAAQ,EAAE,EADD;IAET,eAAe,EAAE,aAFR;IAGT,SAAS,EAAE;EAHF;AAD2B,CAAlB,CAAtB;AAAA,IAAQ,SAAR,uBAAQ,SAAR;;AAQA,IAAM,MAAM,GAAG;EACb,IAAI,EAAE,UAAU,CAAC,MAAX,CAAkB;IACtB,SAAS,oBACJ,cADI,CADa;IAItB,IAAI;MACF,KAAK,EAAE,KAAK,CAAC;IADX,GAEC,SAFD;EAJkB,CAAlB,CADO;EAUb,KAAK,EAAE,UAAU,CAAC,MAAX,CAAkB;IACvB,SAAS,oBACJ,cADI,CADc;IAIvB,IAAI;MACF,KAAK,EAAE,KAAK,CAAC;IADX,GAEC,SAFD;EAJmB,CAAlB;AAVM,CAAf;AA6BA,OAAM,SAAU,IAAV,OAMgB;EAAA,yBALpB,QAKoB;EAAA,IALpB,QAKoB,8BALT,MAKS;EAAA,IAJpB,cAIoB,QAJpB,cAIoB;EAAA,IAHpB,cAGoB,QAHpB,cAGoB;EAAA,2BAFpB,UAEoB;EAAA,IAFpB,UAEoB,gCAFP,WAEO;EAAA,IADpB,aACoB,QADpB,aACoB;;EACpB,sBAAsB,cAAc,EAApC;EAAA,IAAQ,SAAR,mBAAQ,SAAR;;EACA,IAAI,cAAc,IAAI,IAAtB,EAA4B;IAC1B,OAAO,IAAP;EACD;;EAED,OACE,KAAC,IAAD;IACE,KAAK,EAAE,CACL,MAAM,CAAC,QAAD,CAAN,CAAiB,SADZ,EAEL,cAAc,IAAI,cAAc,CAAC,QAAD,CAF3B,CADT;IAAA,UAME,KAAC,IAAD;MACE,KAAK,EAAE,CACL,MAAM,CAAC,QAAD,CAAN,CAAiB,IADZ,EAEL,aAAa,IAAI,aAAa,CAAC,QAAD,CAFzB,CADT;MAAA,UAMG,KAAK,CAAC,cAAc,CAAC,SAAhB,CAAL,CAAgC,MAAhC,CAAuC,SAAS,EAAhD,EAAoD,MAApD,CAA2D,UAA3D;IANH;EANF,EADF;AAiBD;AAED,IAAI,CAAC,SAAL,GAAiB;EACf,QAAQ,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CADK;EAEf,cAAc,EAAE,SAAS,CAAC,MAFX;EAGf,cAAc,EAAE,SAAS,CAAC,KAAV,CAAgB;IAC9B,IAAI,EAAE,aADwB;IAE9B,KAAK,EAAE;EAFuB,CAAhB,CAHD;EAOf,UAAU,EAAE,SAAS,CAAC,MAPP;EAQf,aAAa,EAAE,SAAS,CAAC,KAAV,CAAgB;IAC7B,IAAI,EAAE,aADuB;IAE7B,KAAK,EAAE;EAFsB,CAAhB;AARA,CAAjB","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View } from 'react-native';\nimport dayjs from 'dayjs';\nimport Color from './Color';\nimport { TIME_FORMAT } from './Constant';\nimport { StylePropType } from './utils';\nimport { useChatContext } from './GiftedChatContext';\nconst { containerStyle } = StyleSheet.create({\n    containerStyle: {\n        marginLeft: 10,\n        marginRight: 10,\n        marginBottom: 5,\n    },\n});\nconst { textStyle } = StyleSheet.create({\n    textStyle: {\n        fontSize: 10,\n        backgroundColor: 'transparent',\n        textAlign: 'right',\n    },\n});\nconst styles = {\n    left: StyleSheet.create({\n        container: {\n            ...containerStyle,\n        },\n        text: {\n            color: Color.timeTextColor,\n            ...textStyle,\n        },\n    }),\n    right: StyleSheet.create({\n        container: {\n            ...containerStyle,\n        },\n        text: {\n            color: Color.white,\n            ...textStyle,\n        },\n    }),\n};\nexport function Time({ position = 'left', containerStyle, currentMessage, timeFormat = TIME_FORMAT, timeTextStyle, }) {\n    const { getLocale } = useChatContext();\n    if (currentMessage == null) {\n        return null;\n    }\n    return (<View style={[\n            styles[position].container,\n            containerStyle && containerStyle[position],\n        ]}>\n      <Text style={[\n            styles[position].text,\n            timeTextStyle && timeTextStyle[position],\n        ]}>\n        {dayjs(currentMessage.createdAt).locale(getLocale()).format(timeFormat)}\n      </Text>\n    </View>);\n}\nTime.propTypes = {\n    position: PropTypes.oneOf(['left', 'right']),\n    currentMessage: PropTypes.object,\n    containerStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    timeFormat: PropTypes.string,\n    timeTextStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n};\n//# sourceMappingURL=Time.js.map"]},"metadata":{},"sourceType":"module"}