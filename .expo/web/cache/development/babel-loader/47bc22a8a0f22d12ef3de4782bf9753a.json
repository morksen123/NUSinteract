{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useCallback, useLayoutEffect, useState } from 'react';\nimport MapView, { Marker } from 'react-native-maps';\nimport IconButton from \"../components/Buttons/IconButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar PickLocationScreen = function PickLocationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedLocation = _useState2[0],\n      setSelectedLocation = _useState2[1];\n\n  var region = {\n    latitude: 1.29692,\n    longitude: 103.77651,\n    latitudeDelta: 0.00837,\n    longitudeDelta: 0.01984\n  };\n\n  function selectLocationHandler(event) {\n    var lat = event.nativeEvent.coordinate.latitude;\n    var lng = event.nativeEvent.coordinate.longitude;\n    setSelectedLocation({\n      lat: lat,\n      lng: lng\n    });\n  }\n\n  var savePickedLocationHandler = useCallback(function () {\n    if (!selectedLocation) {\n      Alert.alert('No Location Picked!', 'Please pick an activity location by tapping on the map before saving.');\n      return;\n    }\n\n    navigation.navigate('HostActivity', {\n      pickedLat: selectedLocation.lat,\n      pickedLng: selectedLocation.lng\n    });\n  }, [navigation, selectedLocation]);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight(_ref2) {\n        var tintColor = _ref2.tintColor;\n        return _jsx(IconButton, {\n          icon: \"save\",\n          size: 24,\n          color: tintColor,\n          onPress: savePickedLocationHandler\n        });\n      }\n    });\n  }, [navigation, savePickedLocationHandler]);\n  return _jsx(MapView, {\n    style: styles.map,\n    initialRegion: region,\n    onPress: selectLocationHandler,\n    children: selectedLocation && _jsx(Marker, {\n      title: \"Picked Location\",\n      coordinate: {\n        latitude: selectedLocation.lat,\n        longitude: selectedLocation.lng\n      }\n    })\n  });\n};\n\nexport default PickLocationScreen;\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useCallback","useLayoutEffect","useState","MapView","Marker","IconButton","PickLocationScreen","navigation","selectedLocation","setSelectedLocation","region","latitude","longitude","latitudeDelta","longitudeDelta","selectLocationHandler","event","lat","nativeEvent","coordinate","lng","savePickedLocationHandler","Alert","alert","navigate","pickedLat","pickedLng","setOptions","headerRight","tintColor","styles","map","StyleSheet","create","flex"],"sources":["/Users/hanyang/Orbital2022/screens/PickLocationScreen.js"],"sourcesContent":["import { Alert, Text, StyleSheet } from 'react-native';\nimport { useCallback, useLayoutEffect, useState } from 'react';\n\nimport MapView, { Marker } from 'react-native-maps';\nimport IconButton from '../components/Buttons/IconButton';\n\n\nconst PickLocationScreen = ({navigation}) => {\n    const [selectedLocation, setSelectedLocation] = useState();\n\n    const region = {\n        latitude: 1.29692,  //preview of NUS MAP\n        longitude: 103.77651 ,\n        latitudeDelta: 0.00837,\n        longitudeDelta: 0.01984\n\n    };\n\n    function selectLocationHandler(event) {\n        const lat = event.nativeEvent.coordinate.latitude;\n        const lng = event.nativeEvent.coordinate.longitude;\n        setSelectedLocation({lat:lat, lng:lng});\n    }\n    \n\n    const savePickedLocationHandler = useCallback(() => {\n        if (!selectedLocation) {\n            Alert.alert(\n                'No Location Picked!', \n                'Please pick an activity location by tapping on the map before saving.'\n            );\n            return;\n        }\n        \n        \n        navigation.navigate('HostActivity', {\n            pickedLat: selectedLocation.lat,\n            pickedLng: selectedLocation.lng\n        });\n    }, [navigation, selectedLocation]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerRight: ({ tintColor }) => (\n                <IconButton \n                    icon = \"save\"\n                    size = {24}\n                    color = {tintColor}\n                    onPress = {savePickedLocationHandler}\n                />\n            ),\n        });\n    }, [navigation, savePickedLocationHandler]);\n    \n    \n\n    return (\n\n        <MapView \n            style = {styles.map}\n            initialRegion = {region}\n            onPress = {selectLocationHandler}\n        >\n            {selectedLocation && (  //if user tapped on map, will have red icon marker\n            <Marker\n                title = \"Picked Location\" \n                coordinate={{latitude: selectedLocation.lat, longitude: selectedLocation.lng}} /> )}\n        \n        </MapView>\n    );\n}\n\nexport default PickLocationScreen;\n\nconst styles = StyleSheet.create({\n    map: {\n        flex:1\n    }\n\n});\n"],"mappings":";;;;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,QAAvC,QAAuD,OAAvD;AAEA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;AACA,OAAOC,UAAP;;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAkB;EAAA,IAAhBC,UAAgB,QAAhBA,UAAgB;;EACzC,gBAAgDL,QAAQ,EAAxD;EAAA;EAAA,IAAOM,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEA,IAAMC,MAAM,GAAG;IACXC,QAAQ,EAAE,OADC;IAEXC,SAAS,EAAE,SAFA;IAGXC,aAAa,EAAE,OAHJ;IAIXC,cAAc,EAAE;EAJL,CAAf;;EAQA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;IAClC,IAAMC,GAAG,GAAGD,KAAK,CAACE,WAAN,CAAkBC,UAAlB,CAA6BR,QAAzC;IACA,IAAMS,GAAG,GAAGJ,KAAK,CAACE,WAAN,CAAkBC,UAAlB,CAA6BP,SAAzC;IACAH,mBAAmB,CAAC;MAACQ,GAAG,EAACA,GAAL;MAAUG,GAAG,EAACA;IAAd,CAAD,CAAnB;EACH;;EAGD,IAAMC,yBAAyB,GAAGrB,WAAW,CAAC,YAAM;IAChD,IAAI,CAACQ,gBAAL,EAAuB;MACnBc,KAAK,CAACC,KAAN,CACI,qBADJ,EAEI,uEAFJ;MAIA;IACH;;IAGDhB,UAAU,CAACiB,QAAX,CAAoB,cAApB,EAAoC;MAChCC,SAAS,EAAEjB,gBAAgB,CAACS,GADI;MAEhCS,SAAS,EAAElB,gBAAgB,CAACY;IAFI,CAApC;EAIH,CAd4C,EAc1C,CAACb,UAAD,EAAaC,gBAAb,CAd0C,CAA7C;EAgBAP,eAAe,CAAC,YAAM;IAClBM,UAAU,CAACoB,UAAX,CAAsB;MAClBC,WAAW,EAAE;QAAA,IAAGC,SAAH,SAAGA,SAAH;QAAA,OACT,KAAC,UAAD;UACI,IAAI,EAAG,MADX;UAEI,IAAI,EAAI,EAFZ;UAGI,KAAK,EAAIA,SAHb;UAII,OAAO,EAAIR;QAJf,EADS;MAAA;IADK,CAAtB;EAUH,CAXc,EAWZ,CAACd,UAAD,EAAac,yBAAb,CAXY,CAAf;EAeA,OAEI,KAAC,OAAD;IACI,KAAK,EAAIS,MAAM,CAACC,GADpB;IAEI,aAAa,EAAIrB,MAFrB;IAGI,OAAO,EAAIK,qBAHf;IAAA,UAKKP,gBAAgB,IACjB,KAAC,MAAD;MACI,KAAK,EAAG,iBADZ;MAEI,UAAU,EAAE;QAACG,QAAQ,EAAEH,gBAAgB,CAACS,GAA5B;QAAiCL,SAAS,EAAEJ,gBAAgB,CAACY;MAA7D;IAFhB;EANJ,EAFJ;AAcH,CA/DD;;AAiEA,eAAed,kBAAf;AAEA,IAAMwB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC7BF,GAAG,EAAE;IACDG,IAAI,EAAC;EADJ;AADwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}