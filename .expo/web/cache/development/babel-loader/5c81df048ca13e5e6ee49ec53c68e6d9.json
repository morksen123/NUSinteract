{"ast":null,"code":"import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n  eventEmitter.addListener(onNewException, ({\n    message\n  }) => {\n    console.error(message);\n  });\n}","map":{"version":3,"sources":["../../src/sweet/setUpErrorManager.fx.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,QAA6B,iBAA7B;AACA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,kBAAP,MAA+B,sBAA/B;;AAEA,IAAI,OAAO,IAAI,QAAQ,CAAC,EAAT,KAAgB,SAA3B,IAAwC,kBAA5C,EAAgE;EAC9D,MAAM,cAAc,GAAG,4CAAvB;EACA,MAAM,YAAY,GAAG,IAAI,YAAJ,CAAiB,kBAAjB,CAArB;EAEA,YAAY,CAAC,WAAb,CAAyB,cAAzB,EAAyC,CAAC;IAAE;EAAF,CAAD,KAAqC;IAC5E,OAAO,CAAC,KAAR,CAAc,OAAd;EACD,CAFD;AAGD","sourcesContent":["import { EventEmitter } from '../EventEmitter';\nimport Platform from '../Platform';\nimport NativeErrorManager from './NativeErrorManager';\n\nif (__DEV__ && Platform.OS === 'android' && NativeErrorManager) {\n  const onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n  const eventEmitter = new EventEmitter(NativeErrorManager);\n\n  eventEmitter.addListener(onNewException, ({ message }: { message: string }) => {\n    console.error(message);\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}