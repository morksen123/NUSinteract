{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Container, Card, UserInfo, UserImgWrapper, UserImg, UserInfoText, UserName, PostTime, MessageText, TextSection } from \"../components/messages/inboxStyle\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { supabase } from \"../utils/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InboxScreen = function InboxScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      InboxChatData = _useState2[0],\n      setInboxChatData = _useState2[1];\n\n  useEffect(function () {\n    var getListOfRoomsData = function _callee() {\n      var _await$supabase$from$, error, data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(supabase.from('hostActivity').select(\"\\n          activity_details,\\n          users!hostActivity_user_id_fkey(avatar_url),\\n          joinActivity!inner(activity_id),\\n          messages!inner(content, created_at)\\n        \").order('created_at', {\n                foreignTable: 'messages',\n                ascending: false\n              }).eq('joinActivity.user_id', user.id).eq('joinActivity.accepted', 'true'));\n\n            case 2:\n              _await$supabase$from$ = _context.sent;\n              error = _await$supabase$from$.error;\n              data = _await$supabase$from$.data;\n              setInboxChatData(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getListOfRoomsData();\n  }, []);\n  return _jsx(Container, {\n    children: _jsx(FlatList, {\n      data: InboxChatData,\n      keyExtractor: function keyExtractor(item) {\n        return item.joinActivity[0].activity_id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Card, {\n          onPress: function onPress() {\n            return navigation.navigate('Messages', {\n              name: item.activity_details.title + \" Chatroom\",\n              activity_id: item.joinActivity[0].activity_id\n            });\n          },\n          children: _jsxs(UserInfo, {\n            children: [_jsx(UserImgWrapper, {\n              children: _jsx(UserImg, {\n                source: {\n                  uri: \"https://aqeopdkkfhradtlezpil.supabase.co/storage/v1/object/public/\" + item.users.avatar_url\n                }\n              })\n            }), _jsxs(TextSection, {\n              children: [_jsxs(UserInfoText, {\n                children: [_jsx(UserName, {\n                  children: item.activity_details.title\n                }), _jsx(PostTime, {\n                  children: new Date(item.messages[0].created_at).toLocaleString()\n                })]\n              }), _jsx(MessageText, {\n                children: item.messages[0].content\n              })]\n            })]\n          })\n        });\n      }\n    })\n  });\n};\n\nexport default InboxScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","useState","Container","Card","UserInfo","UserImgWrapper","UserImg","UserInfoText","UserName","PostTime","MessageText","TextSection","UserContext","supabase","InboxScreen","navigation","user","InboxChatData","setInboxChatData","getListOfRoomsData","from","select","order","foreignTable","ascending","eq","id","error","data","item","joinActivity","activity_id","navigate","name","activity_details","title","uri","users","avatar_url","Date","messages","created_at","toLocaleString","content","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"sources":["/Users/hanyang/Orbital2022/screens/InboxScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { View, Text, Button, StyleSheet, FlatList } from 'react-native';\nimport {\n  Container,\n  Card,\n  UserInfo,\n  UserImgWrapper,\n  UserImg,\n  UserInfoText,\n  UserName,\n  PostTime,\n  MessageText,\n  TextSection,\n} from '../components/messages/inboxStyle';\n\nimport { UserContext } from '../contexts/userContext';\n\nimport { supabase } from '../utils/supabase';\n\nconst InboxScreen = ({ navigation }) => {\n\n  const { user } = useContext(UserContext);\n\n  const [InboxChatData, setInboxChatData] = useState(null)\n\n  // useEffect(() => {\n\n  //   const getListOfRoomsData = async () => {\n  //     const { error, data } = await supabase \n  //       .from('joinActivity')\n  //       .select(`\n  //         activity_id,\n  //         messages(content, created_at),\n  //         users!joinActivity_user_id_fkey(username, avatar_url),\n  //         hostActivity(activity_details)\n  //         `)\n  //       .match({ user_id: user.id, accepted: true })\n\n  //     console.log({ error, data})  \n      \n  //     setInboxChatData(data)\n  //   }\n  //   getListOfRoomsData(); \n\n  // }, [])\n\n  useEffect(() => {\n\n    const getListOfRoomsData = async () => {\n      const { error, data } = await supabase \n        .from('hostActivity')\n        .select(`\n          activity_details,\n          users!hostActivity_user_id_fkey(avatar_url),\n          joinActivity!inner(activity_id),\n          messages!inner(content, created_at)\n        `)\n        .order('created_at', { foreignTable: 'messages', ascending: false})\n        .eq('joinActivity.user_id', user.id)\n        .eq('joinActivity.accepted', 'true')\n      \n      setInboxChatData(data)\n    }\n    getListOfRoomsData(); \n\n  }, [])\n\n\n    return (\n      <Container>\n        <FlatList \n          data={InboxChatData}\n          keyExtractor={item=>item.joinActivity[0].activity_id}\n          renderItem={({item}) => (\n            \n            <Card \n              onPress={() => \n                navigation.navigate('Messages',\n                  {\n                    name: `${item.activity_details.title} Chatroom`,\n                    activity_id: item.joinActivity[0].activity_id\n                  })}\n            >\n              <UserInfo>\n                <UserImgWrapper>\n                  <UserImg \n                    source={{ uri: `https://aqeopdkkfhradtlezpil.supabase.co/storage/v1/object/public/${item.users.avatar_url}`}}\n                  />\n                </UserImgWrapper>\n                <TextSection>\n                  <UserInfoText>\n                    <UserName>\n                      {item.activity_details.title}\n                    </UserName>\n                    <PostTime>\n                      {new Date(item.messages[0].created_at).toLocaleString()}\n                    </PostTime>\n                  </UserInfoText>\n                  <MessageText>{item.messages[0].content}</MessageText>\n                </TextSection>\n              </UserInfo>\n            </Card>\n          )}\n        />\n      </Container>\n    );\n};\n\nexport default InboxScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1, \n    alignItems: 'center', \n    justifyContent: 'center'\n  },\n});"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;;;;;;AAEA,SACEC,SADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,cAJF,EAKEC,OALF,EAMEC,YANF,EAOEC,QAPF,EAQEC,QARF,EASEC,WATF,EAUEC,WAVF;AAaA,SAASC,WAAT;AAEA,SAASC,QAAT;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EAEtC,kBAAiBhB,UAAU,CAACa,WAAD,CAA3B;EAAA,IAAQI,IAAR,eAAQA,IAAR;;EAEA,gBAA0Cf,QAAQ,CAAC,IAAD,CAAlD;EAAA;EAAA,IAAOgB,aAAP;EAAA,IAAsBC,gBAAtB;;EAuBAlB,SAAS,CAAC,YAAM;IAEd,IAAMmB,kBAAkB,GAAG;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACKN,QAAQ,CACnCO,IAD2B,CACtB,cADsB,EAE3BC,MAF2B,+LAQ3BC,KAR2B,CAQrB,YARqB,EAQP;gBAAEC,YAAY,EAAE,UAAhB;gBAA4BC,SAAS,EAAE;cAAvC,CARO,EAS3BC,EAT2B,CASxB,sBATwB,EASAT,IAAI,CAACU,EATL,EAU3BD,EAV2B,CAUxB,uBAVwB,EAUC,MAVD,CADL;;YAAA;cAAA;cACjBE,KADiB,yBACjBA,KADiB;cACVC,IADU,yBACVA,IADU;cAazBV,gBAAgB,CAACU,IAAD,CAAhB;;YAbyB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAA3B;;IAeAT,kBAAkB;EAEnB,CAnBQ,EAmBN,EAnBM,CAAT;EAsBE,OACE,KAAC,SAAD;IAAA,UACE,KAAC,QAAD;MACE,IAAI,EAAEF,aADR;MAEE,YAAY,EAAE,sBAAAY,IAAI;QAAA,OAAEA,IAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqBC,WAAvB;MAAA,CAFpB;MAGE,UAAU,EAAE;QAAA,IAAEF,IAAF,SAAEA,IAAF;QAAA,OAEV,KAAC,IAAD;UACE,OAAO,EAAE;YAAA,OACPd,UAAU,CAACiB,QAAX,CAAoB,UAApB,EACE;cACEC,IAAI,EAAKJ,IAAI,CAACK,gBAAL,CAAsBC,KAA3B,cADN;cAEEJ,WAAW,EAAEF,IAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqBC;YAFpC,CADF,CADO;UAAA,CADX;UAAA,UAQE,MAAC,QAAD;YAAA,WACE,KAAC,cAAD;cAAA,UACE,KAAC,OAAD;gBACE,MAAM,EAAE;kBAAEK,GAAG,yEAAuEP,IAAI,CAACQ,KAAL,CAAWC;gBAAvF;cADV;YADF,EADF,EAME,MAAC,WAAD;cAAA,WACE,MAAC,YAAD;gBAAA,WACE,KAAC,QAAD;kBAAA,UACGT,IAAI,CAACK,gBAAL,CAAsBC;gBADzB,EADF,EAIE,KAAC,QAAD;kBAAA,UACG,IAAII,IAAJ,CAASV,IAAI,CAACW,QAAL,CAAc,CAAd,EAAiBC,UAA1B,EAAsCC,cAAtC;gBADH,EAJF;cAAA,EADF,EASE,KAAC,WAAD;gBAAA,UAAcb,IAAI,CAACW,QAAL,CAAc,CAAd,EAAiBG;cAA/B,EATF;YAAA,EANF;UAAA;QARF,EAFU;MAAA;IAHd;EADF,EADF;AAsCH,CAvFD;;AAyFA,eAAe7B,WAAf;AAEA,IAAM8B,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE;EAHP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}