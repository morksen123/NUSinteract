{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AuthPressable from \"../components/auth/AuthPressable\";\nimport { useState } from 'react';\nimport { supabase } from \"../utils/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar THEME = '#3F3F3F';\n\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      username = _useState8[0],\n      setUsername = _useState8[1];\n\n  var signUpWithEmail = function _callee() {\n    var _await$supabase$auth$, error;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (email.includes(\"@u.nus.edu\")) {\n              _context.next = 4;\n              break;\n            }\n\n            Alert.alert(\"NUS email required\");\n            _context.next = 13;\n            break;\n\n          case 4:\n            if (!(password != confirmPassword)) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Different passwords\");\n            _context.next = 13;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(supabase.auth.signUp({\n              email: email,\n              password: confirmPassword\n            }, {\n              data: {\n                username: username\n              }\n            }));\n\n          case 10:\n            _await$supabase$auth$ = _context.sent;\n            error = _await$supabase$auth$.error;\n            error ? Alert.alert(error.message) : Alert.alert(\"Sign Up Sucessful!\");\n\n          case 13:\n            restoreForm();\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var restoreForm = function restoreForm() {\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setUsername('');\n    Keyboard.dismiss();\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: [styles.title, styles.boldText],\n      children: \"Sign Up\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Email\",\n      KeyboardType: \"email-address\",\n      value: email,\n      onChangeText: setEmail,\n      selectionColor: THEME\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: setUsername,\n      selectionColor: THEME\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      selectionColor: THEME,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Confirm password\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      selectionColor: THEME,\n      secureTextEntry: true\n    }), _jsx(AuthPressable, {\n      onPressHandler: signUpWithEmail,\n      title: 'Proceed'\n    })]\n  });\n};\n\nexport default SignUpScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#7FFFD4',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 35,\n    fontFamily: \"AvenirNext-Italic\",\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  textInput: {\n    alignSelf: 'center',\n    borderWidth: 2,\n    borderColor: THEME,\n    borderRadius: 4,\n    width: '80%',\n    height: 40,\n    paddingHorizontal: 8,\n    marginBottom: 10\n  },\n  boldText: {\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["AuthPressable","useState","supabase","THEME","SignUpScreen","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","username","setUsername","signUpWithEmail","includes","Alert","alert","auth","signUp","data","error","message","restoreForm","Keyboard","dismiss","styles","container","title","boldText","textInput","StyleSheet","create","backgroundColor","height","justifyContent","alignItems","fontSize","fontFamily","textAlign","marginBottom","alignSelf","borderWidth","borderColor","borderRadius","width","paddingHorizontal","fontWeight"],"sources":["/Users/hanyang/Orbital2022/screens/SignUpScreen.js"],"sourcesContent":["import { \n    StyleSheet,\n    Text,\n    View,\n    Keyboard,\n    Alert,\n    TextInput\n} from 'react-native';\n\nimport AuthPressable from '../components/auth/AuthPressable';\n\nimport { useState } from 'react';\n\nimport { supabase } from '../utils/supabase';\n\n\nconst THEME = '#3F3F3F';\n\n\nconst SignUpScreen = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [username, setUsername] = useState('');\n\n    // check if sign up passed through\n    const signUpWithEmail = async () => {\n\n        if (!email.includes(\"@u.nus.edu\")) {\n            Alert.alert(\"NUS email required\");\n        \n        } else if (password != confirmPassword) {\n            Alert.alert(\"Different passwords\")\n        \n        } else {\n            const { error } = await supabase.auth.signUp(\n                { \n                    email: email,\n                    password: confirmPassword,\n                },\n                {\n                    data: { \n                    username: username\n                    }\n                }\n            );   \n\n            error ? Alert.alert(error.message) : \n                Alert.alert(\"Sign Up Sucessful!\") \n        }\n\n        restoreForm(); \n    }\n    \n\n    const restoreForm = () => {\n        setEmail(''); \n        setPassword('');\n        setConfirmPassword('');\n        setUsername('');\n        Keyboard.dismiss(); \n    }\n    \n    return (\n\n        <View style={styles.container}>\n            \n            <Text style={[styles.title, styles.boldText]}>\n                Sign Up\n            </Text>\n        \n            <TextInput\n                style={styles.textInput}\n                placeholder='Email' \n                KeyboardType='email-address'\n                value={email}\n                onChangeText={setEmail}\n                selectionColor={THEME}\n            />\n\n            <TextInput\n                style={styles.textInput}\n                placeholder='Username' \n                value={username}\n                onChangeText={setUsername}\n                selectionColor={THEME}\n            />\n\n            <TextInput\n                style={styles.textInput}\n                placeholder='Password' \n                value={password}\n                onChangeText={setPassword}\n                selectionColor={THEME}\n                secureTextEntry\n            />\n\n            <TextInput\n                style={styles.textInput}\n                placeholder='Confirm password' \n                value={confirmPassword}\n                onChangeText={setConfirmPassword}\n                selectionColor={THEME}\n                secureTextEntry\n            />\n\n            <AuthPressable\n                onPressHandler={signUpWithEmail}    \n                title={'Proceed'}\n            />\n        </View>\n    )\n}\n\nexport default SignUpScreen; \n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: '#7FFFD4',\n        height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    \n    title: {\n        fontSize: 35, \n        fontFamily: \"AvenirNext-Italic\",\n        textAlign: 'center',\n        marginBottom: 20\n    },\n\n    textInput: {\n        alignSelf: 'center',\n        borderWidth: 2,\n        borderColor: THEME, \n        borderRadius: 4, \n        width: '80%',\n        height: 40, \n        paddingHorizontal: 8, \n        marginBottom: 10\n    },\n\n    boldText: {\n        fontWeight: '500'\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}