{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { supabase } from \"../../utils/supabase\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { UserContext } from \"../../contexts/userContext\";\nimport OutlinedButton from \"../Buttons/OutlinedButton\";\nimport 'react-native-url-polyfill/auto';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Avatar = function Avatar(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(data[0].avatar_url),\n      _useState2 = _slicedToArray(_useState, 2),\n      avatarUrl = _useState2[0],\n      setAvatarUrl = _useState2[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var pickImage = function _callee() {\n    var result, avatarUrl, ext, fileName, formData, _await$supabase$stora, _data, _error, _await$supabase$from$, data, error;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            avatarUrl = '';\n\n            if (result.cancelled) {\n              _context.next = 15;\n              break;\n            }\n\n            ext = result.uri.substring(result.uri.lastIndexOf(\".\") + 1);\n            fileName = result.uri.replace(/^.*[\\\\\\/]/, \"\");\n            formData = new FormData();\n            formData.append(\"files\", {\n              uri: result.uri,\n              name: fileName,\n              type: result.type ? \"image/\" + ext : \"video/\" + ext\n            });\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(supabase.storage.from(\"avatars\").upload(fileName, formData));\n\n          case 11:\n            _await$supabase$stora = _context.sent;\n            _data = _await$supabase$stora.data;\n            _error = _await$supabase$stora.error;\n\n            if (_data) {\n              setAvatarUrl(_data.Key);\n              avatarUrl = _data.Key;\n            }\n\n          case 15:\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(supabase.from('users').upsert({\n              id: user.id,\n              avatar_url: avatarUrl\n            }));\n\n          case 17:\n            _await$supabase$from$ = _context.sent;\n            data = _await$supabase$from$.data;\n            error = _await$supabase$from$.error;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Image, {\n      source: {\n        uri: \"https://aqeopdkkfhradtlezpil.supabase.co/storage/v1/object/public/\" + avatarUrl\n      },\n      style: {\n        width: 200,\n        height: 200,\n        borderRadius: 200 / 2,\n        marginTop: 100\n      }\n    }), _jsx(View, {\n      style: styles.button,\n      children: _jsx(OutlinedButton, {\n        icon: \"person-circle\",\n        onPress: pickImage,\n        children: \"Choose Profile Picture\"\n      })\n    })]\n  });\n};\n\nexport default Avatar;\nvar styles = StyleSheet.create({\n  button: {\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","useState","useContext","useEffect","supabase","ImagePicker","UserContext","OutlinedButton","Avatar","data","avatar_url","avatarUrl","setAvatarUrl","user","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","ext","uri","substring","lastIndexOf","fileName","replace","formData","FormData","append","name","type","storage","from","upload","error","Key","upsert","id","flex","alignItems","justifyContent","width","height","borderRadius","marginTop","styles","button","StyleSheet","create"],"sources":["/Users/hanyang/Orbital2022/components/profile/Avatar.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\n\nimport {StyleSheet, Image, View, Alert, Text } from 'react-native';\n\nimport { supabase } from '../../utils/supabase';\n\nimport * as ImagePicker from 'expo-image-picker';\n\nimport { UserContext } from '../../contexts/userContext';\n\nimport OutlinedButton from '../Buttons/OutlinedButton';\n\n\n/* polyfills */\n/** URL polyfill */\nimport 'react-native-url-polyfill/auto';\n\nconst Avatar = ({ data }) => {\n  // console.log(data)\n  const [avatarUrl, setAvatarUrl] = useState(data[0].avatar_url);\n\n  const { user } = useContext(UserContext);\n\n  /*\n  ** Allows picking of image from photo gallery\n  */\n  const pickImage = async () => {\n      \n    // No permissions request is necessary for launching the image library\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    let avatarUrl = '';\n    // uploads image to supabase storage if there's no error with imagePicker\n    if (!result.cancelled) {\n\n      const ext = result.uri.substring(result.uri.lastIndexOf(\".\") + 1);\n\n      const fileName = result.uri.replace(/^.*[\\\\\\/]/, \"\");\n\n      var formData = new FormData();\n      formData.append(\"files\", {\n          uri: result.uri,\n          name: fileName, \n          type: result.type ? `image/${ext}` : `video/${ext}`,\n      })\n\n      const { data, error } = await supabase.storage\n        .from(\"avatars\")\n        .upload(fileName, formData)\n\n      if (data) {\n        setAvatarUrl(data.Key); \n        avatarUrl = data.Key\n      }\n    }\n    \n    // updates avatarUrl associated with profile \n    const { data, error } = await supabase.from('users').upsert({\n        id: user.id, \n        avatar_url: avatarUrl\n    })\n\n  };\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      {<Image \n        source={{ uri: `https://aqeopdkkfhradtlezpil.supabase.co/storage/v1/object/public/${avatarUrl}`}} \n        style={{width: 200, height: 200, borderRadius: 200 / 2, marginTop: 100}} \n      />}\n\n      <View style = {styles.button}>\n        <OutlinedButton icon=\"person-circle\" onPress={pickImage}>Choose Profile Picture</OutlinedButton>\n      </View>\n\n    </View>\n  );\n}\n\nexport default Avatar;\n\n\nconst styles = StyleSheet.create({\n  button:{\n    marginTop: 10\n  }\n  \n\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module"}