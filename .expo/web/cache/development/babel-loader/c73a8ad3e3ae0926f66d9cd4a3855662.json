{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { THEME } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport AuthPressable from \"../components/auth/AuthPressable\";\nimport { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar supabaseUrl = \"https://aqeopdkkfhradtlezpil.supabase.co\";\nvar supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFxZW9wZGtrZmhyYWR0bGV6cGlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTM0NTIxMTEsImV4cCI6MTk2OTAyODExMX0.MZZovcPnuGFnM2wDyabFZAuL8ei9vZqlfxql4I849wA\";\nvar supabase = createClient(supabaseUrl, supabaseAnonKey);\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  function signUpWithEmail() {\n    var _await$supabase$auth$, user, error;\n\n    return _regeneratorRuntime.async(function signUpWithEmail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (email.includes(\"@u.nus.edu\")) {\n              _context.next = 4;\n              break;\n            }\n\n            Alert.alert(\"NUS email required\");\n            _context.next = 14;\n            break;\n\n          case 4:\n            if (!(password != confirmPassword)) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Different passwords\");\n            _context.next = 14;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(supabase.auth.signUp({\n              email: email,\n              password: confirmPassword\n            }));\n\n          case 10:\n            _await$supabase$auth$ = _context.sent;\n            user = _await$supabase$auth$.user;\n            error = _await$supabase$auth$.error;\n            error ? Alert.alert(error.message) : Alert.alert(\"Sign Up Sucessful!\");\n\n          case 14:\n            restoreForm();\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var restoreForm = function restoreForm() {\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    Keyboard.dismiss();\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: [styles.title, styles.boldText],\n        children: \"Sign Up\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Email\",\n        KeyboardType: \"email-address\",\n        value: email,\n        onChangeText: setEmail,\n        selectionColor: THEME\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        selectionColor: THEME,\n        secureTextEntry: true\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Confirm password\",\n        value: confirmPassword,\n        onChangeText: setConfirmPassword,\n        selectionColor: THEME,\n        secureTextEntry: true\n      }), _jsx(AuthPressable, {\n        onPressHandler: signUpWithEmail,\n        title: 'Proceed'\n      })]\n    })\n  });\n};\n\nexport default SignUpScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#7FFFD4',\n    height: '100%',\n    paddingTop: '100',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 35,\n    fontFamily: \"AvenirNext-Italic\",\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  textInput: {\n    alignSelf: 'center',\n    borderWidth: 2,\n    borderColor: THEME,\n    borderRadius: 4,\n    width: '80%',\n    height: 40,\n    paddingHorizontal: 8,\n    marginBottom: 10\n  },\n  boldText: {\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["THEME","AuthPressable","useState","createClient","supabaseUrl","supabaseAnonKey","supabase","SignUpScreen","navigation","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","signUpWithEmail","includes","Alert","alert","auth","signUp","user","error","message","restoreForm","Keyboard","dismiss","Platform","OS","styles","container","title","boldText","textInput","StyleSheet","create","backgroundColor","height","paddingTop","alignItems","fontSize","fontFamily","textAlign","marginBottom","alignSelf","borderWidth","borderColor","borderRadius","width","paddingHorizontal","fontWeight"],"sources":["/Users/hanyang/Orbital2022/screens/SignUpScreen.js"],"sourcesContent":["import { \n    StyleSheet,\n    Text,\n    View,\n    Keyboard,\n    KeyboardAvoidingView,\n    Platform, \n    Alert,\n    THEME,\n    TextInput\n} from 'react-native';\n\nimport AuthPressable from '../components/auth/AuthPressable';\n\nimport { useState } from 'react';\n\nimport { createClient } from '@supabase/supabase-js'\n\n// Not authenticated also added\n\nconst supabaseUrl = \"https://aqeopdkkfhradtlezpil.supabase.co\"\nconst supabaseAnonKey = \n\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFxZW9wZGtrZmhyYWR0bGV6cGlsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NTM0NTIxMTEsImV4cCI6MTk2OTAyODExMX0.MZZovcPnuGFnM2wDyabFZAuL8ei9vZqlfxql4I849wA\"\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\n\n\nconst SignUpScreen = ({ navigation }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [ confirmPassword, setConfirmPassword] = useState('');\n\n    // check if sign up passed through\n    async function signUpWithEmail() {\n\n        if (!email.includes(\"@u.nus.edu\")) {\n            Alert.alert(\"NUS email required\");\n        \n        } else if (password != confirmPassword) {\n            Alert.alert(\"Different passwords\")\n        \n        } else {\n            const { user, error } = await supabase.auth.signUp({ \n                email: email,\n                password: confirmPassword,\n            }) \n\n            error ? Alert.alert(error.message) : \n                Alert.alert(\"Sign Up Sucessful!\")\n        }\n\n        restoreForm(); \n    }\n    \n\n    const restoreForm = () => {\n        setEmail(''); \n        setPassword('');\n        setConfirmPassword('');\n        Keyboard.dismiss(); \n    }\n    \n    return (\n        <KeyboardAvoidingView\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        >\n\n            <View style={styles.container}>\n             \n                <Text style={[styles.title, styles.boldText]}>\n                    Sign Up\n                </Text>\n          \n                <TextInput\n                    style={styles.textInput}\n                    placeholder='Email' \n                    KeyboardType='email-address'\n                    value={email}\n                    onChangeText={setEmail}\n                    selectionColor={THEME}\n                />\n\n                <TextInput\n                    style={styles.textInput}\n                    placeholder='Password' \n                    value={password}\n                    onChangeText={setPassword}\n                    selectionColor={THEME}\n                    secureTextEntry\n                />\n\n                <TextInput\n                    style={styles.textInput}\n                    placeholder='Confirm password' \n                    value={confirmPassword}\n                    onChangeText={setConfirmPassword}\n                    selectionColor={THEME}\n                    secureTextEntry\n                />\n\n                <AuthPressable\n                    onPressHandler={signUpWithEmail}    \n                    title={'Proceed'}\n                />\n            </View>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default SignUpScreen; \n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: '#7FFFD4',\n        height: '100%',\n        paddingTop: '100',\n        alignItems: 'center',\n    },\n    \n    title: {\n        fontSize: 35, \n        fontFamily: \"AvenirNext-Italic\",\n        textAlign: 'center',\n        marginBottom: 20\n    },\n\n    textInput: {\n        alignSelf: 'center',\n        borderWidth: 2,\n        borderColor: THEME, \n        borderRadius: 4, \n        width: '80%',\n        height: 40, \n        paddingHorizontal: 8, \n        marginBottom: 10\n    },\n\n    boldText: {\n        fontWeight: '500'\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}