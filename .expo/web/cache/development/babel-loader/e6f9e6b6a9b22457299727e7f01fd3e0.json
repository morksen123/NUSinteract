{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useGesture, useNextTick } from \"./hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    WINDOW_WIDTH = _Dimensions$get.width,\n    WINDOW_HEIGHT = _Dimensions$get.height;\n\nvar isIOS = Platform.OS === \"ios\";\n\nvar getDefaultTarget = function getDefaultTarget() {\n  return {\n    x: 0,\n    y: 0,\n    opacity: 1\n  };\n};\n\nvar styles = StyleSheet.create({\n  background: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    height: WINDOW_HEIGHT\n  },\n  open: {\n    position: \"absolute\",\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"transparent\"\n  },\n  header: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: WINDOW_WIDTH,\n    backgroundColor: \"transparent\"\n  },\n  closeButton: {\n    fontSize: 35,\n    color: \"white\",\n    lineHeight: 60,\n    width: 70,\n    textAlign: \"center\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 1.5,\n    shadowColor: \"black\",\n    shadowOpacity: 0.8\n  }\n});\n\nvar LightboxOverlay = function LightboxOverlay(_ref) {\n  var useNativeDriver = _ref.useNativeDriver,\n      dragDismissThreshold = _ref.dragDismissThreshold,\n      springConfig = _ref.springConfig,\n      isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      willClose = _ref.willClose,\n      didOpen = _ref.didOpen,\n      swipeToDismiss = _ref.swipeToDismiss,\n      origin = _ref.origin,\n      backgroundColor = _ref.backgroundColor,\n      renderHeader = _ref.renderHeader,\n      modalProps = _ref.modalProps,\n      children = _ref.children,\n      doubleTapZoomEnabled = _ref.doubleTapZoomEnabled,\n      doubleTapGapTimer = _ref.doubleTapGapTimer,\n      doubleTapCallback = _ref.doubleTapCallback,\n      doubleTapZoomToCenter = _ref.doubleTapZoomToCenter,\n      doubleTapMaxZoom = _ref.doubleTapMaxZoom,\n      doubleTapZoomStep = _ref.doubleTapZoomStep,\n      doubleTapInitialScale = _ref.doubleTapInitialScale,\n      doubleTapAnimationDuration = _ref.doubleTapAnimationDuration,\n      longPressGapTimer = _ref.longPressGapTimer,\n      longPressCallback = _ref.longPressCallback;\n\n  var _panResponder = useRef();\n\n  var pan = useRef(new Animated.Value(0));\n  var openVal = useRef(new Animated.Value(0));\n  var handlers = useRef();\n\n  var _useGesture = useGesture({\n    useNativeDriver: useNativeDriver,\n    doubleTapZoomEnabled: doubleTapZoomEnabled,\n    doubleTapGapTimer: doubleTapGapTimer,\n    doubleTapCallback: doubleTapCallback,\n    doubleTapZoomToCenter: doubleTapZoomToCenter,\n    doubleTapMaxZoom: doubleTapMaxZoom,\n    doubleTapZoomStep: doubleTapZoomStep,\n    doubleTapInitialScale: doubleTapInitialScale,\n    doubleTapAnimationDuration: doubleTapAnimationDuration,\n    longPressGapTimer: longPressGapTimer,\n    longPressCallback: longPressCallback\n  }),\n      _useGesture2 = _slicedToArray(_useGesture, 2),\n      gesture = _useGesture2[0],\n      animations = _useGesture2[1];\n\n  var _useState = useState({\n    isAnimating: false,\n    isPanning: false,\n    target: getDefaultTarget()\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      _useState2$ = _useState2[0],\n      isAnimating = _useState2$.isAnimating,\n      isPanning = _useState2$.isPanning,\n      target = _useState2$.target,\n      setState = _useState2[1];\n\n  var handleCloseNextTick = useNextTick(onClose);\n\n  var close = function close() {\n    willClose();\n\n    if (isIOS) {\n      StatusBar.setHidden(false, \"fade\");\n    }\n\n    gesture.reset();\n    setState(function (s) {\n      return _objectSpread(_objectSpread({}, s), {}, {\n        isAnimating: true\n      });\n    });\n    Animated.spring(openVal.current, _objectSpread(_objectSpread({\n      toValue: 0\n    }, springConfig), {}, {\n      useNativeDriver: useNativeDriver\n    })).start(function (_ref2) {\n      var finished = _ref2.finished;\n\n      if (finished) {\n        setState(function (s) {\n          return _objectSpread(_objectSpread({}, s), {}, {\n            isAnimating: false\n          });\n        });\n        handleCloseNextTick();\n      }\n    });\n  };\n\n  var open = function open() {\n    if (isIOS) {\n      StatusBar.setHidden(true, \"fade\");\n    }\n\n    pan.current.setValue(0);\n    setState(function (s) {\n      return _objectSpread(_objectSpread({}, s), {}, {\n        isAnimating: true,\n        target: getDefaultTarget()\n      });\n    });\n    Animated.spring(openVal.current, _objectSpread(_objectSpread({\n      toValue: 1\n    }, springConfig), {}, {\n      useNativeDriver: useNativeDriver\n    })).start(function (_ref3) {\n      var finished = _ref3.finished;\n\n      if (finished) {\n        setState(function (s) {\n          return _objectSpread(_objectSpread({}, s), {}, {\n            isAnimating: false\n          });\n        });\n        didOpen();\n      }\n    });\n  };\n\n  var initPanResponder = function initPanResponder() {\n    _panResponder.current = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return !isAnimating;\n      },\n      onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {\n        return !isAnimating;\n      },\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n        return !isAnimating;\n      },\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return !isAnimating;\n      },\n      onPanResponderGrant: function onPanResponderGrant(e, gestureState) {\n        gesture.init();\n        pan.current.setValue(0);\n        setState(function (s) {\n          return _objectSpread(_objectSpread({}, s), {}, {\n            isPanning: true\n          });\n        });\n        gesture.onLongPress(e, gestureState);\n        gesture.onDoubleTap(e, gestureState);\n      },\n      onPanResponderMove: Animated.event([null, {\n        dy: pan.current\n      }], {\n        useNativeDriver: useNativeDriver\n      }),\n      onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n        return true;\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        gesture.release();\n        if (gesture.isDoubleTaped) return;\n        if (gesture.isLongPressed) return;\n\n        if (Math.abs(gestureState.dy) > dragDismissThreshold) {\n          setState(function (s) {\n            return _objectSpread(_objectSpread({}, s), {}, {\n              isPanning: false,\n              target: {\n                y: gestureState.dy,\n                x: gestureState.dx,\n                opacity: 1 - Math.abs(gestureState.dy / WINDOW_HEIGHT)\n              }\n            });\n          });\n          close();\n        } else {\n          Animated.spring(pan.current, _objectSpread(_objectSpread({\n            toValue: 0\n          }, springConfig), {}, {\n            useNativeDriver: useNativeDriver\n          })).start(function (_ref4) {\n            var finished = _ref4.finished;\n            finished && setState(function (s) {\n              return _objectSpread(_objectSpread({}, s), {}, {\n                isPanning: false\n              });\n            });\n          });\n        }\n      }\n    });\n  };\n\n  useEffect(function () {\n    initPanResponder();\n  }, [useNativeDriver, isAnimating]);\n  useEffect(function () {\n    isOpen && open();\n  }, [isOpen]);\n  useEffect(function () {\n    if (_panResponder.current && swipeToDismiss) {\n      handlers.current = _panResponder.current.panHandlers;\n    }\n  }, [swipeToDismiss, _panResponder.current]);\n  var lightboxOpacityStyle = {\n    opacity: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, target.opacity]\n    })\n  };\n  var dragStyle;\n\n  if (isPanning) {\n    dragStyle = {\n      top: pan.current\n    };\n    lightboxOpacityStyle.opacity = pan.current.interpolate({\n      inputRange: [-WINDOW_HEIGHT, 0, WINDOW_HEIGHT],\n      outputRange: [0, 1, 0]\n    });\n  }\n\n  var openStyle = [styles.open, {\n    left: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.x, target.x]\n    }),\n    top: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.y, target.y]\n    }),\n    width: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.width, WINDOW_WIDTH]\n    }),\n    height: openVal.current.interpolate({\n      inputRange: [0, 1],\n      outputRange: [origin.height, WINDOW_HEIGHT]\n    })\n  }];\n\n  var background = _jsx(Animated.View, {\n    style: [styles.background, {\n      backgroundColor: backgroundColor\n    }, lightboxOpacityStyle]\n  });\n\n  var header = _jsx(Animated.View, {\n    style: [styles.header, lightboxOpacityStyle],\n    children: renderHeader ? renderHeader(close) : _jsx(TouchableOpacity, {\n      onPress: close,\n      children: _jsx(Text, {\n        style: styles.closeButton,\n        children: \"\\xD7\"\n      })\n    })\n  });\n\n  var content = _jsx(Animated.View, _objectSpread(_objectSpread({\n    style: [openStyle, dragStyle, animations]\n  }, handlers.current), {}, {\n    children: children\n  }));\n\n  return _jsxs(Modal, _objectSpread(_objectSpread({\n    visible: isOpen,\n    transparent: true,\n    onRequestClose: close\n  }, modalProps), {}, {\n    children: [background, content, header]\n  }));\n};\n\nexport default LightboxOverlay;","map":{"version":3,"names":["React","useRef","useEffect","useState","useGesture","useNextTick","Dimensions","get","WINDOW_WIDTH","width","WINDOW_HEIGHT","height","isIOS","Platform","OS","getDefaultTarget","x","y","opacity","styles","StyleSheet","create","background","position","top","left","open","flex","justifyContent","backgroundColor","header","closeButton","fontSize","color","lineHeight","textAlign","shadowOffset","shadowRadius","shadowColor","shadowOpacity","LightboxOverlay","useNativeDriver","dragDismissThreshold","springConfig","isOpen","onClose","willClose","didOpen","swipeToDismiss","origin","renderHeader","modalProps","children","doubleTapZoomEnabled","doubleTapGapTimer","doubleTapCallback","doubleTapZoomToCenter","doubleTapMaxZoom","doubleTapZoomStep","doubleTapInitialScale","doubleTapAnimationDuration","longPressGapTimer","longPressCallback","_panResponder","pan","Animated","Value","openVal","handlers","gesture","animations","isAnimating","isPanning","target","setState","handleCloseNextTick","close","StatusBar","setHidden","reset","s","spring","current","toValue","start","finished","setValue","initPanResponder","PanResponder","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","e","gestureState","init","onLongPress","onDoubleTap","onPanResponderMove","event","dy","onPanResponderTerminationRequest","onPanResponderRelease","evt","release","isDoubleTaped","isLongPressed","Math","abs","dx","panHandlers","lightboxOpacityStyle","interpolate","inputRange","outputRange","dragStyle","openStyle","content"],"sources":["/Users/hanyang/Orbital2022/node_modules/react-native-lightbox-v2/dist/LightboxOverlay.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { Animated, Dimensions, PanResponder, Platform, StyleSheet, StatusBar, TouchableOpacity, Text, Modal, } from \"react-native\";\nimport { useGesture, useNextTick } from \"./hooks\";\nconst { width: WINDOW_WIDTH, height: WINDOW_HEIGHT } = Dimensions.get(\"window\");\nconst isIOS = Platform.OS === \"ios\";\nconst getDefaultTarget = () => ({ x: 0, y: 0, opacity: 1 });\nconst styles = StyleSheet.create({\n    background: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: WINDOW_WIDTH,\n        height: WINDOW_HEIGHT,\n    },\n    open: {\n        position: \"absolute\",\n        flex: 1,\n        justifyContent: \"center\",\n        // Android pan handlers crash without this declaration:\n        backgroundColor: \"transparent\",\n    },\n    header: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: WINDOW_WIDTH,\n        backgroundColor: \"transparent\",\n    },\n    closeButton: {\n        fontSize: 35,\n        color: \"white\",\n        lineHeight: 60,\n        width: 70,\n        textAlign: \"center\",\n        shadowOffset: {\n            width: 0,\n            height: 0,\n        },\n        shadowRadius: 1.5,\n        shadowColor: \"black\",\n        shadowOpacity: 0.8,\n    },\n});\nconst LightboxOverlay = ({ useNativeDriver, dragDismissThreshold, springConfig, isOpen, onClose, willClose, didOpen, swipeToDismiss, origin, backgroundColor, renderHeader, modalProps, children, doubleTapZoomEnabled, doubleTapGapTimer, doubleTapCallback, doubleTapZoomToCenter, doubleTapMaxZoom, doubleTapZoomStep, doubleTapInitialScale, doubleTapAnimationDuration, longPressGapTimer, longPressCallback }) => {\n    const _panResponder = useRef();\n    const pan = useRef(new Animated.Value(0));\n    const openVal = useRef(new Animated.Value(0));\n    const handlers = useRef();\n    const [gesture, animations] = useGesture({\n        useNativeDriver,\n        doubleTapZoomEnabled,\n        doubleTapGapTimer,\n        doubleTapCallback,\n        doubleTapZoomToCenter,\n        doubleTapMaxZoom,\n        doubleTapZoomStep,\n        doubleTapInitialScale,\n        doubleTapAnimationDuration,\n        longPressGapTimer,\n        longPressCallback\n    });\n    const [{ isAnimating, isPanning, target }, setState] = useState({\n        isAnimating: false,\n        isPanning: false,\n        target: getDefaultTarget(),\n    });\n    const handleCloseNextTick = useNextTick(onClose);\n    const close = () => {\n        willClose();\n        if (isIOS) {\n            StatusBar.setHidden(false, \"fade\");\n        }\n        gesture.reset();\n        setState((s) => ({\n            ...s,\n            isAnimating: true,\n        }));\n        Animated.spring(openVal.current, {\n            toValue: 0,\n            ...springConfig,\n            useNativeDriver,\n        }).start(({ finished }) => {\n            if (finished) {\n                setState((s) => ({ ...s, isAnimating: false }));\n                handleCloseNextTick();\n            }\n        });\n    };\n    const open = () => {\n        if (isIOS) {\n            StatusBar.setHidden(true, \"fade\");\n        }\n        pan.current.setValue(0);\n        setState((s) => ({\n            ...s,\n            isAnimating: true,\n            target: getDefaultTarget(),\n        }));\n        Animated.spring(openVal.current, {\n            toValue: 1,\n            ...springConfig,\n            useNativeDriver,\n        }).start(({ finished }) => {\n            if (finished) {\n                setState((s) => ({ ...s, isAnimating: false }));\n                didOpen();\n            }\n        });\n    };\n    const initPanResponder = () => {\n        _panResponder.current = PanResponder.create({\n            // Ask to be the responder:\n            onStartShouldSetPanResponder: () => !isAnimating,\n            onStartShouldSetPanResponderCapture: () => !isAnimating,\n            onMoveShouldSetPanResponder: () => !isAnimating,\n            onMoveShouldSetPanResponderCapture: () => !isAnimating,\n            onPanResponderGrant: (e, gestureState) => {\n                gesture.init();\n                pan.current.setValue(0);\n                setState((s) => ({ ...s, isPanning: true }));\n                gesture.onLongPress(e, gestureState);\n                gesture.onDoubleTap(e, gestureState);\n            },\n            onPanResponderMove: Animated.event([null, { dy: pan.current }], {\n                useNativeDriver,\n            }),\n            onPanResponderTerminationRequest: () => true,\n            onPanResponderRelease: (evt, gestureState) => {\n                gesture.release();\n                if (gesture.isDoubleTaped)\n                    return;\n                if (gesture.isLongPressed)\n                    return;\n                if (Math.abs(gestureState.dy) > dragDismissThreshold) {\n                    setState((s) => ({\n                        ...s,\n                        isPanning: false,\n                        target: {\n                            y: gestureState.dy,\n                            x: gestureState.dx,\n                            opacity: 1 - Math.abs(gestureState.dy / WINDOW_HEIGHT),\n                        },\n                    }));\n                    close();\n                }\n                else {\n                    Animated.spring(pan.current, {\n                        toValue: 0,\n                        ...springConfig,\n                        useNativeDriver,\n                    }).start(({ finished }) => {\n                        finished && setState((s) => ({ ...s, isPanning: false }));\n                    });\n                }\n            },\n        });\n    };\n    useEffect(() => {\n        initPanResponder();\n    }, [useNativeDriver, isAnimating]);\n    useEffect(() => {\n        isOpen && open();\n    }, [isOpen]);\n    useEffect(() => {\n        if (_panResponder.current && swipeToDismiss) {\n            handlers.current = _panResponder.current.panHandlers;\n        }\n    }, [swipeToDismiss, _panResponder.current]);\n    const lightboxOpacityStyle = {\n        opacity: openVal.current.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, target.opacity],\n        }),\n    };\n    let dragStyle;\n    if (isPanning) {\n        dragStyle = {\n            top: pan.current,\n        };\n        lightboxOpacityStyle.opacity = pan.current.interpolate({\n            inputRange: [-WINDOW_HEIGHT, 0, WINDOW_HEIGHT],\n            outputRange: [0, 1, 0],\n        });\n    }\n    const openStyle = [\n        styles.open,\n        {\n            left: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.x, target.x],\n            }),\n            top: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.y, target.y],\n            }),\n            width: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.width, WINDOW_WIDTH],\n            }),\n            height: openVal.current.interpolate({\n                inputRange: [0, 1],\n                outputRange: [origin.height, WINDOW_HEIGHT],\n            }),\n        },\n    ];\n    const background = (<Animated.View style={[styles.background, { backgroundColor }, lightboxOpacityStyle]}></Animated.View>);\n    const header = (<Animated.View style={[styles.header, lightboxOpacityStyle]}>\n      {renderHeader ? (renderHeader(close)) : (<TouchableOpacity onPress={close}>\n          <Text style={styles.closeButton}>×</Text>\n        </TouchableOpacity>)}\n    </Animated.View>);\n    const content = (<Animated.View style={[openStyle, dragStyle, animations]} {...handlers.current}>\n      {children}\n    </Animated.View>);\n    return (<Modal visible={isOpen} transparent={true} onRequestClose={close} {...modalProps}>\n      {background}\n      {content}\n      {header}\n    </Modal>);\n};\nexport default LightboxOverlay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}