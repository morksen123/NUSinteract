{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"../../utils/supabase\";\nimport { Text } from \"react-native-paper\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Messages = function Messages() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    var getData = function _callee() {\n      var _await$supabase$from$, data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(supabase.from('messages').select('*'));\n\n            case 2:\n              _await$supabase$from$ = _context.sent;\n              data = _await$supabase$from$.data;\n              setMessages(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, [messages]);\n  return messages.map(function (message) {\n    return _jsxs(Text, {\n      children: [message.content, \" \", message.user_id]\n    }, message.id);\n  });\n};\n\nexport default Messages;","map":{"version":3,"names":["useEffect","useState","supabase","Text","Messages","messages","setMessages","getData","from","select","data","map","message","content","user_id","id"],"sources":["/Users/hanyang/Orbital2022/components/messages/messages.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { supabase } from \"../../utils/supabase\";\nimport { Text } from \"react-native-paper\";\n\nconst Messages = () => {\n\n    const [messages, setMessages] = useState([])\n    \n    useEffect(() => {\n        const getData = async () => {\n            const { data } = await supabase.from('messages').select('*')\n            setMessages(data)\n        }\n        \n        getData()\n    }, [messages])\n\n    return (\n        messages.map((message) =>\n         <Text key={message.id}>\n            {message.content} {message.user_id}\n         </Text>\n        )\n    )\n}\n\nexport default Messages;"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT;AACA,SAASC,IAAT,QAAqB,oBAArB;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EAEnB,gBAAgCH,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOI,QAAP;EAAA,IAAiBC,WAAjB;;EAEAN,SAAS,CAAC,YAAM;IACZ,IAAMO,OAAO,GAAG;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCACWL,QAAQ,CAACM,IAAT,CAAc,UAAd,EAA0BC,MAA1B,CAAiC,GAAjC,CADX;;YAAA;cAAA;cACJC,IADI,yBACJA,IADI;cAEZJ,WAAW,CAACI,IAAD,CAAX;;YAFY;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAhB;;IAKAH,OAAO;EACV,CAPQ,EAON,CAACF,QAAD,CAPM,CAAT;EASA,OACIA,QAAQ,CAACM,GAAT,CAAa,UAACC,OAAD;IAAA,OACZ,MAAC,IAAD;MAAA,WACIA,OAAO,CAACC,OADZ,OACsBD,OAAO,CAACE,OAD9B;IAAA,GAAWF,OAAO,CAACG,EAAnB,CADY;EAAA,CAAb,CADJ;AAOH,CApBD;;AAsBA,eAAeX,QAAf"},"metadata":{},"sourceType":"module"}