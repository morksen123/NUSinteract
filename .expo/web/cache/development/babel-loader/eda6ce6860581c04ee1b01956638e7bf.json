{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar GOOGLE_API_KEY = 'AIzaSyAv9BiDg9f_Rcjd6SovscJKA8S2A5-JmWs';\nexport function getMapPreview(lat, lng) {\n  var imagePreviewUrl = \"https://maps.googleapis.com/maps/api/staticmap?center=\" + lat + \",\" + lng + \"&zoom=17.5&size=600x300&maptype=roadmap&markers=color:red%7Clabel:S%7C\" + lat + \",\" + lng + \"&key=\" + GOOGLE_API_KEY;\n  return imagePreviewUrl;\n}\nexport function getAddress(lat, lng) {\n  var url, response, data, address;\n  return _regeneratorRuntime.async(function getAddress$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" + lat + \",\" + lng + \"&key=\" + GOOGLE_API_KEY;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          response = _context.sent;\n\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Failed to fetch address!');\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          data = _context.sent;\n          address = data.results[0].formatted_address;\n          return _context.abrupt(\"return\", address);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["GOOGLE_API_KEY","getMapPreview","lat","lng","imagePreviewUrl","getAddress","url","fetch","response","ok","Error","json","data","address","results","formatted_address"],"sources":["/Users/hanyang/Orbital2022/components/map/location.js"],"sourcesContent":["const GOOGLE_API_KEY = 'AIzaSyAv9BiDg9f_Rcjd6SovscJKA8S2A5-JmWs';\n\nexport function getMapPreview(lat, lng) {\n    const imagePreviewUrl = `https://maps.googleapis.com/maps/api/staticmap?center=${lat},${lng}&zoom=17.5&size=600x300&maptype=roadmap&markers=color:red%7Clabel:S%7C${lat},${lng}&key=${GOOGLE_API_KEY}`;\n\n    return imagePreviewUrl;\n}\n\nexport async function getAddress(lat, lng) {\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GOOGLE_API_KEY}`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n        throw new Error('Failed to fetch address!');\n    }\n\n    const data = await response.json();\n    const address = data.results[0].formatted_address;\n    return address;\n}"],"mappings":";AAAA,IAAMA,cAAc,GAAG,yCAAvB;AAEA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;EACpC,IAAMC,eAAe,8DAA4DF,GAA5D,SAAmEC,GAAnE,8EAA+ID,GAA/I,SAAsJC,GAAtJ,aAAiKH,cAAtL;EAEA,OAAOI,eAAP;AACH;AAED,OAAO,SAAeC,UAAf,CAA0BH,GAA1B,EAA+BC,GAA/B;EAAA;EAAA;IAAA;MAAA;QAAA;UACGG,GADH,iEACqEJ,GADrE,SAC4EC,GAD5E,aACuFH,cADvF;UAAA;UAAA,iCAEoBO,KAAK,CAACD,GAAD,CAFzB;;QAAA;UAEGE,QAFH;;UAAA,IAIEA,QAAQ,CAACC,EAJX;YAAA;YAAA;UAAA;;UAAA,MAKO,IAAIC,KAAJ,CAAU,0BAAV,CALP;;QAAA;UAAA;UAAA,iCAQgBF,QAAQ,CAACG,IAAT,EARhB;;QAAA;UAQGC,IARH;UASGC,OATH,GASaD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,iBAT7B;UAAA,iCAUIF,OAVJ;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}