{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, TextInput } from 'react-native-elements';\nimport { supabase } from \"../../utils/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Avatar(_ref) {\n  var url = _ref.url,\n      size = _ref.size,\n      onUpload = _ref.onUpload;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      avatarUrl = _useState2[0],\n      setAvatarUrl = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uploading = _useState4[0],\n      setUploading = _useState4[1];\n\n  useEffect(function () {\n    if (url) downloadImage(url);\n  }, [url]);\n\n  function downloadImage(path) {\n    var _await$supabase$stora, data, error, _url;\n\n    return _regeneratorRuntime.async(function downloadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(supabase.storage.from('avatars').download(path));\n\n          case 3:\n            _await$supabase$stora = _context.sent;\n            data = _await$supabase$stora.data;\n            error = _await$supabase$stora.error;\n\n            if (!error) {\n              _context.next = 8;\n              break;\n            }\n\n            throw error;\n\n          case 8:\n            _url = URL.createObjectURL(data);\n            setAvatarUrl(_url);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('Error downloading image: ', _context.t0.message);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  }\n\n  function uploadAvatar(event) {\n    var file, fileExt, fileName, filePath, _await$supabase$stora2, uploadError;\n\n    return _regeneratorRuntime.async(function uploadAvatar$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setUploading(true);\n\n            if (!(!event.target.files || event.target.files.length === 0)) {\n              _context2.next = 4;\n              break;\n            }\n\n            throw new Error('You must select an image to upload.');\n\n          case 4:\n            file = event.target.files[0];\n            fileExt = file.name.split('.').pop();\n            fileName = Math.random() + \".\" + fileExt;\n            filePath = \"\" + fileName;\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(supabase.storage.from('avatars').upload(filePath, file));\n\n          case 10:\n            _await$supabase$stora2 = _context2.sent;\n            uploadError = _await$supabase$stora2.error;\n\n            if (!uploadError) {\n              _context2.next = 14;\n              break;\n            }\n\n            throw uploadError;\n\n          case 14:\n            onUpload(filePath);\n            _context2.next = 20;\n            break;\n\n          case 17:\n            _context2.prev = 17;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0.message);\n\n          case 20:\n            _context2.prev = 20;\n            setUploading(false);\n            return _context2.finish(20);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 17, 20, 23]], Promise);\n  }\n\n  return _jsxs(View, {\n    children: [avatarUrl ? _jsx(Image, {\n      src: avatarUrl,\n      alt: \"Avatar\",\n      className: \"avatar image\"\n    }) : _jsx(View, {\n      className: \"avatar no-image\"\n    }), _jsx(View, {\n      children: _jsx(TextInput, {\n        type: \"file\",\n        id: \"single\",\n        accept: \"image/*\",\n        onChange: uploadAvatar,\n        disabled: uploading\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useEffect","useState","Button","TextInput","supabase","Avatar","url","size","onUpload","avatarUrl","setAvatarUrl","uploading","setUploading","downloadImage","path","storage","from","download","data","error","URL","createObjectURL","console","log","message","uploadAvatar","event","target","files","length","Error","file","fileExt","name","split","pop","fileName","Math","random","filePath","upload","uploadError","alert"],"sources":["/Users/hanyang/Orbital2022/components/profile/Avatar.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nimport { Alert, StyleSheet, View, Image } from 'react-native'\n\nimport { Button, TextInput } from 'react-native-elements'\n\nimport { supabase } from '../../utils/supabase'\n\nexport default function Avatar({ url, size, onUpload }) {\n  const [avatarUrl, setAvatarUrl] = useState(null)\n  const [uploading, setUploading] = useState(false)\n\n  useEffect(() => {\n    if (url) downloadImage(url)\n  }, [url])\n\n  async function downloadImage(path) {\n    try {\n      const { data, error } = await supabase.storage.from('avatars').download(path)\n      if (error) {\n        throw error\n      }\n      const url = URL.createObjectURL(data)\n      setAvatarUrl(url)\n    } catch (error) {\n      console.log('Error downloading image: ', error.message)\n    }\n  }\n\n  async function uploadAvatar(event) {\n    try {\n      setUploading(true)\n\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error('You must select an image to upload.')\n      }\n\n      const file = event.target.files[0]\n      const fileExt = file.name.split('.').pop()\n      const fileName = `${Math.random()}.${fileExt}`\n      const filePath = `${fileName}`\n\n      let { error: uploadError } = await supabase.storage.from('avatars').upload(filePath, file)\n\n      if (uploadError) {\n        throw uploadError\n      }\n\n      onUpload(filePath)\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setUploading(false)\n    }\n  }\n\n  return (\n    <View>\n      {avatarUrl ? (\n        <Image src={avatarUrl} alt=\"Avatar\" className=\"avatar image\" />\n      ) : (\n        <View className=\"avatar no-image\" />\n      )}\n      <View>\n        <TextInput\n          type=\"file\"\n          id=\"single\"\n          accept=\"image/*\"\n          onChange={uploadAvatar}\n          disabled={uploading}\n        />\n      </View>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}