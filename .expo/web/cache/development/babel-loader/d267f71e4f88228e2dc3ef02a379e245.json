{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Button, Modal } from 'antd';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HostActivityScreen = function HostActivityScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmLoading = _useState4[0],\n      setConfirmLoading = _useState4[1];\n\n  var _useState5 = useState('Content of the modal'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modalText = _useState6[0],\n      setModalText = _useState6[1];\n\n  var showModal = function showModal() {\n    setVisible(true);\n  };\n\n  var handleOk = function handleOk() {\n    setModalText('The modal will be closed after two seconds');\n    setConfirmLoading(true);\n    setTimeout(function () {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  var handleCancel = function handleCancel() {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      type: \"primary\",\n      onClick: showModal,\n      children: \"Open Modal with async logic\"\n    }), _jsx(Modal, {\n      title: \"Title\",\n      visible: visible,\n      onOk: handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: handleCancel,\n      children: _jsx(\"p\", {\n        children: modalText\n      })\n    })]\n  });\n};\n\nexport default HostActivityScreen;","map":{"version":3,"names":["Button","Modal","useState","HostActivityScreen","visible","setVisible","confirmLoading","setConfirmLoading","modalText","setModalText","showModal","handleOk","setTimeout","handleCancel","console","log"],"sources":["/Users/hanyang/Orbital2022/screens/HostActivityScreen.js"],"sourcesContent":["import { Button, Modal } from 'antd';\nimport { useState } from 'react';\n\n\nconst HostActivityScreen = () => {\n  const [visible, setVisible] = useState(false);\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [modalText, setModalText] = useState('Content of the modal');\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setModalText('The modal will be closed after two seconds');\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  return (\n    <View>\n      <Button type=\"primary\" onClick={showModal}>\n        Open Modal with async logic\n      </Button>\n      <Modal\n        title=\"Title\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n      >\n        <p>{modalText}</p>\n      </Modal>\n    </View>\n  );\n};\n\nexport default HostActivityScreen; \n\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;EAC/B,gBAA8BD,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOE,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAA4CH,QAAQ,CAAC,KAAD,CAApD;EAAA;EAAA,IAAOI,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAAkCL,QAAQ,CAAC,sBAAD,CAA1C;EAAA;EAAA,IAAOM,SAAP;EAAA,IAAkBC,YAAlB;;EAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBL,UAAU,CAAC,IAAD,CAAV;EACD,CAFD;;EAIA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACrBF,YAAY,CAAC,4CAAD,CAAZ;IACAF,iBAAiB,CAAC,IAAD,CAAjB;IACAK,UAAU,CAAC,YAAM;MACfP,UAAU,CAAC,KAAD,CAAV;MACAE,iBAAiB,CAAC,KAAD,CAAjB;IACD,CAHS,EAGP,IAHO,CAAV;EAID,CAPD;;EASA,IAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzBC,OAAO,CAACC,GAAR,CAAY,uBAAZ;IACAV,UAAU,CAAC,KAAD,CAAV;EACD,CAHD;;EAKA,OACE,MAAC,IAAD;IAAA,WACE,KAAC,MAAD;MAAQ,IAAI,EAAC,SAAb;MAAuB,OAAO,EAAEK,SAAhC;MAAA;IAAA,EADF,EAIE,KAAC,KAAD;MACE,KAAK,EAAC,OADR;MAEE,OAAO,EAAEN,OAFX;MAGE,IAAI,EAAEO,QAHR;MAIE,cAAc,EAAEL,cAJlB;MAKE,QAAQ,EAAEO,YALZ;MAAA,UAOE;QAAA,UAAIL;MAAJ;IAPF,EAJF;EAAA,EADF;AAgBD,CAvCD;;AAyCA,eAAeL,kBAAf"},"metadata":{},"sourceType":"module"}