{"ast":null,"code":"import { useRef } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\n\nvar now = function now() {\n  return +new Date();\n};\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar INIT_POSITION = {\n  x: 0,\n  y: 0\n};\nexport var useGesture = function useGesture(_ref) {\n  var _ref$doubleTapGapTime = _ref.doubleTapGapTimer,\n      doubleTapGapTimer = _ref$doubleTapGapTime === void 0 ? 500 : _ref$doubleTapGapTime,\n      _ref$doubleTapAnimati = _ref.doubleTapAnimationDuration,\n      doubleTapAnimationDuration = _ref$doubleTapAnimati === void 0 ? 100 : _ref$doubleTapAnimati,\n      _ref$doubleTapZoomEna = _ref.doubleTapZoomEnabled,\n      doubleTapZoomEnabled = _ref$doubleTapZoomEna === void 0 ? true : _ref$doubleTapZoomEna,\n      doubleTapCallback = _ref.doubleTapCallback,\n      doubleTapZoomToCenter = _ref.doubleTapZoomToCenter,\n      _ref$doubleTapMaxZoom = _ref.doubleTapMaxZoom,\n      doubleTapMaxZoom = _ref$doubleTapMaxZoom === void 0 ? 2 : _ref$doubleTapMaxZoom,\n      _ref$doubleTapInitial = _ref.doubleTapInitialScale,\n      doubleTapInitialScale = _ref$doubleTapInitial === void 0 ? 1 : _ref$doubleTapInitial,\n      _ref$doubleTapZoomSte = _ref.doubleTapZoomStep,\n      doubleTapZoomStep = _ref$doubleTapZoomSte === void 0 ? 0.5 : _ref$doubleTapZoomSte,\n      _ref$UNSAFE_INNER_WID = _ref.UNSAFE_INNER_WIDTH__cropWidth,\n      UNSAFE_INNER_WIDTH__cropWidth = _ref$UNSAFE_INNER_WID === void 0 ? width : _ref$UNSAFE_INNER_WID,\n      _ref$UNSAFE_INNER_WID2 = _ref.UNSAFE_INNER_WIDTH__cropHeight,\n      UNSAFE_INNER_WIDTH__cropHeight = _ref$UNSAFE_INNER_WID2 === void 0 ? height : _ref$UNSAFE_INNER_WID2,\n      _ref$longPressGapTime = _ref.longPressGapTimer,\n      longPressGapTimer = _ref$longPressGapTime === void 0 ? 2000 : _ref$longPressGapTime,\n      longPressCallback = _ref.longPressCallback,\n      useNativeDriver = _ref.useNativeDriver;\n  var lastTapTimer = useRef(0);\n  var longPressTimer = useRef();\n  var isDoubleTaped = useRef(false);\n  var isLongPressed = useRef(false);\n  var coordinates = useRef(INIT_POSITION);\n  var doubleTapScale = useRef(doubleTapInitialScale);\n  var animatedScale = useRef(new Animated.Value(1));\n  var animatedPositionX = useRef(new Animated.Value(INIT_POSITION.x));\n  var animatedPositionY = useRef(new Animated.Value(INIT_POSITION.y));\n  var animations = useRef();\n\n  var init = function init() {\n    isDoubleTaped.current = false;\n    isLongPressed.current = false;\n  };\n\n  var release = function release() {\n    if (longPressTimer.current) clearTimeout(longPressTimer.current);\n  };\n\n  var onDoubleTap = function onDoubleTap(e, gestureState) {\n    if (gestureState.numberActiveTouches > 1) return;\n    var nowTapTimer = now();\n\n    if (nowTapTimer - lastTapTimer.current < doubleTapGapTimer) {\n      isDoubleTaped.current = true;\n      lastTapTimer.current = 0;\n      if (doubleTapCallback) doubleTapCallback(e, gestureState);\n      if (!doubleTapZoomEnabled) return;\n      longPressTimer.current && clearTimeout(longPressTimer.current);\n      doubleTapScale.current = doubleTapScale.current + doubleTapInitialScale * doubleTapZoomStep;\n\n      if (doubleTapScale.current > doubleTapMaxZoom) {\n        doubleTapScale.current = doubleTapInitialScale;\n      }\n\n      coordinates.current = {\n        x: e.nativeEvent.changedTouches[0].pageX,\n        y: e.nativeEvent.changedTouches[0].pageY\n      };\n\n      if (doubleTapZoomToCenter) {\n        coordinates.current = {\n          x: UNSAFE_INNER_WIDTH__cropWidth / 2,\n          y: UNSAFE_INNER_WIDTH__cropHeight / 2\n        };\n      }\n\n      Animated.parallel([Animated.timing(animatedScale.current, {\n        toValue: doubleTapScale.current,\n        duration: doubleTapAnimationDuration,\n        useNativeDriver: useNativeDriver\n      }), Animated.timing(animatedPositionX.current, {\n        toValue: (UNSAFE_INNER_WIDTH__cropWidth / 2 - coordinates.current.x) * (doubleTapScale.current - doubleTapInitialScale) / doubleTapScale.current,\n        duration: doubleTapAnimationDuration,\n        useNativeDriver: useNativeDriver\n      }), Animated.timing(animatedPositionY.current, {\n        toValue: (UNSAFE_INNER_WIDTH__cropHeight / 2 - coordinates.current.y) * (doubleTapScale.current - doubleTapInitialScale) / doubleTapScale.current,\n        duration: doubleTapAnimationDuration,\n        useNativeDriver: useNativeDriver\n      })]).start();\n      animations.current = {\n        transform: [{\n          scale: animatedScale.current\n        }, {\n          translateX: animatedPositionX.current\n        }, {\n          translateY: animatedPositionY.current\n        }]\n      };\n    } else {\n      lastTapTimer.current = nowTapTimer;\n    }\n  };\n\n  var onLongPress = function onLongPress(e, gestureState) {\n    if (longPressTimer.current) {\n      clearTimeout(longPressTimer.current);\n      longPressTimer.current = null;\n    }\n\n    longPressTimer.current = setTimeout(function () {\n      isLongPressed.current = true;\n\n      if (longPressCallback) {\n        longPressCallback(e, gestureState);\n      }\n    }, longPressGapTimer);\n  };\n\n  var reset = function reset() {\n    animatedScale.current.setValue(doubleTapInitialScale);\n    animatedPositionX.current.setValue(INIT_POSITION.x);\n    animatedPositionY.current.setValue(INIT_POSITION.y);\n    animations.current = void 0;\n  };\n\n  return [{\n    onDoubleTap: onDoubleTap,\n    reset: reset,\n    init: init,\n    release: release,\n    onLongPress: onLongPress,\n    isDoubleTaped: isDoubleTaped.current,\n    isLongPressed: isLongPressed.current\n  }, animations.current];\n};","map":{"version":3,"names":["useRef","now","Date","Dimensions","get","width","height","INIT_POSITION","x","y","useGesture","doubleTapGapTimer","doubleTapAnimationDuration","doubleTapZoomEnabled","doubleTapCallback","doubleTapZoomToCenter","doubleTapMaxZoom","doubleTapInitialScale","doubleTapZoomStep","UNSAFE_INNER_WIDTH__cropWidth","UNSAFE_INNER_WIDTH__cropHeight","longPressGapTimer","longPressCallback","useNativeDriver","lastTapTimer","longPressTimer","isDoubleTaped","isLongPressed","coordinates","doubleTapScale","animatedScale","Animated","Value","animatedPositionX","animatedPositionY","animations","init","current","release","clearTimeout","onDoubleTap","e","gestureState","numberActiveTouches","nowTapTimer","nativeEvent","changedTouches","pageX","pageY","parallel","timing","toValue","duration","start","transform","scale","translateX","translateY","onLongPress","setTimeout","reset","setValue"],"sources":["/Users/hanyang/Orbital2022/node_modules/react-native-lightbox-v2/dist/hooks/use-gesture.js"],"sourcesContent":["import { useRef } from \"react\";\nimport { Dimensions, Animated, } from \"react-native\";\n// -------------------------  default vars  ------------------------\nconst now = () => +new Date();\nconst { width, height } = Dimensions.get(\"window\");\nconst INIT_POSITION = { x: 0, y: 0 };\n// -------------------------  hooks  -------------------------\nexport const useGesture = ({ doubleTapGapTimer = 500, doubleTapAnimationDuration = 100, doubleTapZoomEnabled = true, doubleTapCallback, doubleTapZoomToCenter, doubleTapMaxZoom = 2, doubleTapInitialScale = 1, doubleTapZoomStep = 0.5, UNSAFE_INNER_WIDTH__cropWidth = width, UNSAFE_INNER_WIDTH__cropHeight = height, longPressGapTimer = 2000, longPressCallback, \n// longPressToSaveEnable = false,\nuseNativeDriver, }) => {\n    // last tap timer\n    const lastTapTimer = useRef(0);\n    // long press timer\n    const longPressTimer = useRef();\n    // if double taped\n    const isDoubleTaped = useRef(false);\n    // if long pressed\n    const isLongPressed = useRef(false);\n    // double tap coordinates\n    const coordinates = useRef(INIT_POSITION);\n    // double tap scale\n    const doubleTapScale = useRef(doubleTapInitialScale);\n    // animated\n    const animatedScale = useRef(new Animated.Value(1));\n    const animatedPositionX = useRef(new Animated.Value(INIT_POSITION.x));\n    const animatedPositionY = useRef(new Animated.Value(INIT_POSITION.y));\n    // animation style to export\n    const animations = useRef();\n    // init the status\n    const init = () => {\n        isDoubleTaped.current = false;\n        isLongPressed.current = false;\n    };\n    const release = () => {\n        if (longPressTimer.current)\n            clearTimeout(longPressTimer.current);\n    };\n    const onDoubleTap = (e, gestureState) => {\n        if (gestureState.numberActiveTouches > 1)\n            return;\n        const nowTapTimer = now();\n        // double tap\n        if ((nowTapTimer - lastTapTimer.current) < doubleTapGapTimer) {\n            isDoubleTaped.current = true;\n            lastTapTimer.current = 0;\n            // double tap callback\n            if (doubleTapCallback)\n                doubleTapCallback(e, gestureState);\n            // double tap zoom\n            if (!doubleTapZoomEnabled)\n                return;\n            // cancel long press\n            longPressTimer.current && clearTimeout(longPressTimer.current);\n            // next scale\n            doubleTapScale.current = doubleTapScale.current + doubleTapInitialScale * doubleTapZoomStep;\n            if (doubleTapScale.current > doubleTapMaxZoom) {\n                doubleTapScale.current = doubleTapInitialScale;\n            }\n            coordinates.current = {\n                x: e.nativeEvent.changedTouches[0].pageX,\n                y: e.nativeEvent.changedTouches[0].pageY,\n            };\n            if (doubleTapZoomToCenter) {\n                coordinates.current = {\n                    x: UNSAFE_INNER_WIDTH__cropWidth / 2,\n                    y: UNSAFE_INNER_WIDTH__cropHeight / 2,\n                };\n            }\n            Animated.parallel([\n                Animated.timing(animatedScale.current, {\n                    toValue: doubleTapScale.current,\n                    duration: doubleTapAnimationDuration,\n                    useNativeDriver,\n                }),\n                Animated.timing(animatedPositionX.current, {\n                    toValue: ((UNSAFE_INNER_WIDTH__cropWidth / 2 - coordinates.current.x) *\n                        (doubleTapScale.current - doubleTapInitialScale)) /\n                        doubleTapScale.current,\n                    duration: doubleTapAnimationDuration,\n                    useNativeDriver,\n                }),\n                Animated.timing(animatedPositionY.current, {\n                    toValue: ((UNSAFE_INNER_WIDTH__cropHeight / 2 - coordinates.current.y) *\n                        (doubleTapScale.current - doubleTapInitialScale)) /\n                        doubleTapScale.current,\n                    duration: doubleTapAnimationDuration,\n                    useNativeDriver,\n                }),\n            ]).start();\n            animations.current = {\n                transform: [\n                    {\n                        scale: animatedScale.current,\n                    },\n                    {\n                        translateX: animatedPositionX.current,\n                    },\n                    {\n                        translateY: animatedPositionY.current,\n                    },\n                ],\n            };\n        }\n        else {\n            lastTapTimer.current = nowTapTimer;\n        }\n    };\n    const onLongPress = (e, gestureState) => {\n        if (longPressTimer.current) {\n            clearTimeout(longPressTimer.current);\n            longPressTimer.current = null;\n        }\n        longPressTimer.current = setTimeout(() => {\n            isLongPressed.current = true;\n            if (longPressCallback) {\n                longPressCallback(e, gestureState);\n            }\n        }, longPressGapTimer);\n    };\n    // reset\n    const reset = () => {\n        // double tap animations reset\n        animatedScale.current.setValue(doubleTapInitialScale);\n        animatedPositionX.current.setValue(INIT_POSITION.x);\n        animatedPositionY.current.setValue(INIT_POSITION.y);\n        animations.current = void 0;\n    };\n    // todo pinch to zoom\n    return [\n        {\n            onDoubleTap,\n            reset,\n            init,\n            release,\n            onLongPress,\n            isDoubleTaped: isDoubleTaped.current,\n            isLongPressed: isLongPressed.current\n        },\n        animations.current,\n    ];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}