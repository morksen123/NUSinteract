{"ast":null,"code":"export const attachRecoveredProps = props => {\n  try {\n    // Optionally import expo-error-recovery\n    const {\n      recoveredProps\n    } = require('expo-error-recovery');\n\n    return { ...props,\n      exp: { ...props.exp,\n        errorRecovery: recoveredProps\n      }\n    };\n  } catch {}\n\n  return props;\n};","map":{"version":3,"sources":["../../src/launch/RecoveryProps.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,oBAAoB,GAA4B,KAAzB,IAAwC;EAC1E,IAAI;IACF;IACA,MAAM;MAAE;IAAF,IAAqB,OAAO,CAAC,qBAAD,CAAlC;;IACA,OAAO,EACL,GAAG,KADE;MAEL,GAAG,EAAE,EAAE,GAAG,KAAK,CAAC,GAAX;QAAgB,aAAa,EAAE;MAA/B;IAFA,CAAP;EAID,CAPD,CAOE,MAAM,CAAE;;EAEV,OAAO,KAAP;AACD,CAXM","sourcesContent":["import { InitialProps } from './withExpoRoot.types';\n\nexport const attachRecoveredProps = <P extends InitialProps>(props: P): P => {\n  try {\n    // Optionally import expo-error-recovery\n    const { recoveredProps } = require('expo-error-recovery');\n    return {\n      ...props,\n      exp: { ...props.exp, errorRecovery: recoveredProps },\n    };\n  } catch {}\n\n  return props;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}