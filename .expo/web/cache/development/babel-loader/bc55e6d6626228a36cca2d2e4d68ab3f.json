{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useContext, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport MapView, { Marker, PROVIDER_GOOGLE, Callout } from 'react-native-maps';\nimport { UserContext } from \"../contexts/userContext\";\nimport { supabase } from \"../utils/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MapScreen = function MapScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  useEffect(function () {\n    var getData = function _callee() {\n      var _await$supabase$from$, error, data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(supabase.from('hostActivity').select('*'));\n\n            case 2:\n              _await$supabase$from$ = _context.sent;\n              error = _await$supabase$from$.error;\n              data = _await$supabase$from$.data;\n              setData(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n  var region = {\n    latitude: 1.29692,\n    longitude: 103.77651,\n    latitudeDelta: 0.00837,\n    longitudeDelta: 0.01984\n  };\n\n  function onPressMarkerHandler(activityID) {\n    var joinActivity = function _callee2() {\n      var _await$supabase$from$2, data, error;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(supabase.from('joinActivity').insert([{\n                'user_id': user.id,\n                'activity_id': activityID\n              }]));\n\n            case 2:\n              _await$supabase$from$2 = _context2.sent;\n              data = _await$supabase$from$2.data;\n              error = _await$supabase$from$2.error;\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    joinActivity();\n    navigation.navigate(\"Activities\");\n  }\n\n  return _jsx(MapView, {\n    style: styles.map,\n    initialRegion: region,\n    provider: PROVIDER_GOOGLE,\n    children: data.map(function (marker) {\n      return _jsx(Marker, {\n        coordinate: marker.coordinates,\n        children: _jsx(Callout, {\n          tooltip: true,\n          onPress: function onPress() {\n            return onPressMarkerHandler(marker.activity_id);\n          },\n          children: _jsxs(View, {\n            style: styles.bubble,\n            children: [_jsx(Text, {\n              children: marker.activity_details.title\n            }), _jsx(Text, {\n              children: marker.activity_details.time\n            }), _jsx(Text, {\n              children: marker.activity_details.location_details\n            }), _jsx(Text, {\n              children: marker.activity_details.details\n            })]\n          })\n        })\n      }, marker.activity_id);\n    })\n  });\n};\n\nexport default MapScreen;\nvar styles = StyleSheet.create({\n  map: {\n    flex: 1\n  },\n  bubble: {\n    flexDirection: 'column',\n    alignSelf: 'flex-start',\n    backgroundColor: '#fff',\n    borderRadius: 6,\n    borderColor: '#ccc',\n    borderWidth: 0.5,\n    padding: 15,\n    borderColor: 'blue'\n  }\n});","map":{"version":3,"names":["useContext","useEffect","useState","MapView","Marker","PROVIDER_GOOGLE","Callout","UserContext","supabase","MapScreen","navigation","data","setData","user","getData","from","select","error","region","latitude","longitude","latitudeDelta","longitudeDelta","onPressMarkerHandler","activityID","joinActivity","insert","id","navigate","styles","map","marker","coordinates","activity_id","bubble","activity_details","title","time","location_details","details","StyleSheet","create","flex","flexDirection","alignSelf","backgroundColor","borderRadius","borderColor","borderWidth","padding"],"sources":["/Users/hanyang/Orbital2022/screens/MapScreen.js"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\n\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nimport MapView, { Marker, PROVIDER_GOOGLE, Callout } from 'react-native-maps';\n\nimport { UserContext } from '../contexts/userContext';\n\nimport { supabase } from '../utils/supabase';\n\n\n\nconst MapScreen = ({navigation}) => {\n\n    const [data, setData] = useState([])\n\n    const { user } = useContext(UserContext);\n\n    useEffect(() => {\n        const getData = async () => {\n            const { error, data } = await supabase\n                .from('hostActivity')\n                .select('*')\n        \n                // console.log(data)\n                setData(data)\n        }\n\n        getData();\n\n    }, [])\n\n\n    const region = {\n        latitude: 1.29692,  //preview of NUS MAP\n        longitude: 103.77651 ,\n        latitudeDelta: 0.00837,\n        longitudeDelta: 0.01984\n    };\n\n    function onPressMarkerHandler(activityID) { \n        \n        //join activity handler\n        const joinActivity = async () => {\n        \n            const { data, error } = await supabase\n                .from('joinActivity')\n                .insert([{\n                    'user_id': user.id,\n                    'activity_id': activityID\n                }])\n        }\n\n        joinActivity()\n\n        navigation.navigate(\"Activities\")\n    }\n\n    return (\n        <MapView \n            style={styles.map}\n            initialRegion = {region}\n            provider = {PROVIDER_GOOGLE}\n        >\n           {data.map((marker) => (\n\n                <Marker\n                    key={marker.activity_id} \n                    coordinate={marker.coordinates}\n                >\n                    <Callout tooltip onPress={() => onPressMarkerHandler(marker.activity_id)}>\n                        <View style={styles.bubble}>\n                            <Text>{marker.activity_details.title}</Text>\n                            <Text>{marker.activity_details.time}</Text>\n                            <Text>{marker.activity_details.location_details}</Text>\n                            <Text>{marker.activity_details.details}</Text> \n                        </View>\n                    </Callout>\n                </Marker>\n            ))}\n        </MapView>  \n    )\n}\n\nexport default MapScreen;\n\n\nconst styles = StyleSheet.create({\n    map: {\n        flex:1\n    },\n\n    bubble: {\n        flexDirection: 'column',\n        alignSelf: 'flex-start',\n        backgroundColor: '#fff',\n        borderRadius: 6,\n        borderColor: '#ccc',\n        borderWidth: 0.5,\n        padding: 15,\n        borderColor: 'blue'\n    },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}