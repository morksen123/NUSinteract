{"ast":null,"code":"import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\n\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName, propertyName) {\n    super('ERR_UNAVAILABLE', `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`);\n  }\n\n}","map":{"version":3,"sources":["../../src/errors/UnavailabilityError.ts"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,aAArB;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA;;;;AAIG;;AACH,OAAM,MAAO,mBAAP,SAAmC,UAAnC,CAA6C;EACjD,WAAA,CAAY,UAAZ,EAAgC,YAAhC,EAAoD;IAClD,MACE,iBADF,EAEE,0BAA0B,UAAU,IAAI,YAAY,wBAAwB,QAAQ,CAAC,EAAE,oEAFzF;EAID;;AANgD","sourcesContent":["import Platform from '../Platform';\nimport { CodedError } from './CodedError';\n\n/**\n * A class for errors to be thrown when a property is accessed which is\n * unavailable, unsupported, or not currently implemented on the running\n * platform.\n */\nexport class UnavailabilityError extends CodedError {\n  constructor(moduleName: string, propertyName: string) {\n    super(\n      'ERR_UNAVAILABLE',\n      `The method or property ${moduleName}.${propertyName} is not available on ${Platform.OS}, are you sure you've linked all the native dependencies properly?`\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}