{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport OutlinedButton from \"../components/Buttons/OutlinedButton\";\nimport { useState } from 'react';\nimport { supabase } from \"../utils/supabase\";\nimport CustomModal from \"../components/Dialog/CustomModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar THEME = '#3F3F3F';\n\nvar SignUpScreen = function SignUpScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      username = _useState8[0],\n      setUsername = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showModal = _useState10[0],\n      setShowModal = _useState10[1];\n\n  var confirmMessage = 'Your account details will be finalised and cannot be changed';\n  var confirmTitle = 'Confirm Sign Up';\n\n  var signUpWithEmail = function _callee() {\n    var _await$supabase$auth$, error;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (email.includes(\"@u.nus.edu\")) {\n              _context.next = 4;\n              break;\n            }\n\n            Alert.alert(\"NUS email required\");\n            _context.next = 17;\n            break;\n\n          case 4:\n            if (!(password != confirmPassword)) {\n              _context.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Different passwords\");\n            _context.next = 17;\n            break;\n\n          case 8:\n            if (!(username.length < 2)) {\n              _context.next = 12;\n              break;\n            }\n\n            alert(\"Invalid Username\");\n            _context.next = 17;\n            break;\n\n          case 12:\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(supabase.auth.signUp({\n              email: email,\n              password: confirmPassword\n            }, {\n              data: {\n                username: username\n              }\n            }));\n\n          case 14:\n            _await$supabase$auth$ = _context.sent;\n            error = _await$supabase$auth$.error;\n            error ? Alert.alert(error.message) : Alert.alert(\"Sign Up Sucessful!\");\n\n          case 17:\n            restoreForm();\n            setShowModal(false);\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var restoreForm = function restoreForm() {\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setUsername('');\n    Keyboard.dismiss();\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: [styles.title, styles.boldText],\n      children: \"Create Your Account\"\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Email\",\n      KeyboardType: \"email-address\",\n      value: email,\n      onChangeText: setEmail,\n      selectionColor: THEME\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Username\",\n      value: username,\n      onChangeText: setUsername,\n      selectionColor: THEME\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      selectionColor: THEME,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      style: styles.textInput,\n      placeholder: \"Confirm password\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      selectionColor: THEME,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.OutlinedButton,\n      children: _jsx(OutlinedButton, {\n        icon: \"document-text\",\n        onPress: function onPress() {\n          return setShowModal(true);\n        },\n        children: \"Sign Up\"\n      })\n    }), showModal ? _jsx(CustomModal, {\n      onDoneHandler: signUpWithEmail,\n      onCancelHandler: function onCancelHandler() {\n        return setShowModal(false);\n      },\n      body: confirmMessage,\n      title: confirmTitle\n    }) : null]\n  });\n};\n\nexport default SignUpScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 35,\n    fontFamily: \"AvenirNext-Italic\",\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  textInput: {\n    alignSelf: 'center',\n    borderWidth: 2,\n    borderColor: THEME,\n    borderRadius: 4,\n    width: '80%',\n    height: 40,\n    paddingHorizontal: 8,\n    marginBottom: 10\n  },\n  boldText: {\n    fontWeight: '500'\n  },\n  OutlinedButton: {\n    width: '82%',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"names":["OutlinedButton","useState","supabase","CustomModal","THEME","SignUpScreen","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","username","setUsername","showModal","setShowModal","confirmMessage","confirmTitle","signUpWithEmail","includes","Alert","alert","length","auth","signUp","data","error","message","restoreForm","Keyboard","dismiss","styles","container","title","boldText","textInput","StyleSheet","create","backgroundColor","height","justifyContent","alignItems","fontSize","fontFamily","textAlign","marginBottom","alignSelf","borderWidth","borderColor","borderRadius","width","paddingHorizontal","fontWeight"],"sources":["/Users/hanyang/Orbital2022/screens/SignUpScreen.js"],"sourcesContent":["import { \n    StyleSheet,\n    Text,\n    View,\n    Keyboard,\n    Alert,\n    TextInput\n} from 'react-native';\n\nimport OutlinedButton from '../components/Buttons/OutlinedButton';\n\nimport { useState } from 'react';\n\nimport { supabase } from '../utils/supabase';\n\nimport CustomModal from '../components/Dialog/CustomModal';\n\n\nconst THEME = '#3F3F3F';\n\n\nconst SignUpScreen = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [username, setUsername] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    \n    const confirmMessage = 'Your account details will be finalised and cannot be changed'\n    const confirmTitle = 'Confirm Sign Up'\n\n    // check if sign up passed through\n    const signUpWithEmail = async () => {\n\n        if (!email.includes(\"@u.nus.edu\")) {\n            Alert.alert(\"NUS email required\");\n        \n        } else if (password != confirmPassword) {\n            Alert.alert(\"Different passwords\")\n        \n        } else if (username.length < 2) {\n            alert(\"Invalid Username\")\n\n        } else {\n            const { error } = await supabase.auth.signUp(\n                { \n                    email: email,\n                    password: confirmPassword,\n                },\n                {\n                    data: { \n                    username: username\n                    }\n                }\n            );   \n\n            error ? Alert.alert(error.message) : \n                Alert.alert(\"Sign Up Sucessful!\") \n        }\n\n        restoreForm();\n        setShowModal(false); \n    }\n    \n\n    const restoreForm = () => {\n        setEmail(''); \n        setPassword('');\n        setConfirmPassword('');\n        setUsername('');\n        Keyboard.dismiss(); \n    }\n\n\n    return (\n        <View style={styles.container}>\n            \n            <Text style={[styles.title, styles.boldText]}>\n                Create Your Account\n            </Text>\n        \n            <TextInput\n                style={styles.textInput}\n                placeholder='Email' \n                KeyboardType='email-address'\n                value={email}\n                onChangeText={setEmail}\n                selectionColor={THEME}\n            />\n\n            <TextInput\n                style={styles.textInput}\n                placeholder='Username' \n                value={username}\n                onChangeText={setUsername}\n                selectionColor={THEME}\n            />\n\n            <TextInput\n                style={styles.textInput}\n                placeholder='Password' \n                value={password}\n                onChangeText={setPassword}\n                selectionColor={THEME}\n                secureTextEntry\n            />\n\n            <TextInput\n                style={styles.textInput}\n                placeholder='Confirm password' \n                value={confirmPassword}\n                onChangeText={setConfirmPassword}\n                selectionColor={THEME}\n                secureTextEntry\n            />\n\n            <View style={styles.OutlinedButton}>\n                <OutlinedButton\n                    icon=\"document-text\"\n                    onPress={() => setShowModal(true)}\n                    >\n                    Sign Up\n                </OutlinedButton>\n            </View>\n\n            { \n                showModal ? \n                <CustomModal\n                    onDoneHandler={signUpWithEmail}\n                    onCancelHandler={() => setShowModal(false)}\n                    body={confirmMessage}\n                    title={confirmTitle}\n                /> : null \n            }\n        </View>\n        \n    )\n}\n\nexport default SignUpScreen; \n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: 'white',\n        height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    \n    title: {\n        fontSize: 35, \n        fontFamily: \"AvenirNext-Italic\",\n        textAlign: 'center',\n        marginBottom: 20\n    },\n\n    textInput: {\n        alignSelf: 'center',\n        borderWidth: 2,\n        borderColor: THEME, \n        borderRadius: 4, \n        width: '80%',\n        height: 40, \n        paddingHorizontal: 8, \n        marginBottom: 10\n    },\n\n    boldText: {\n        fontWeight: '500'\n    },\n\n    OutlinedButton: {\n        width: '82%',\n        justifyContent: 'center',\n        alignSelf: 'center'\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}