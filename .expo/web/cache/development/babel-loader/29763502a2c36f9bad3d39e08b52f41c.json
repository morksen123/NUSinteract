{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from 'react';\nimport AuthPressable from \"../components/auth/AuthPressable\";\nimport { supabase } from \"../utils/supabase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar THEME = '#3F3F3F';\n\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var signInWithEmail = function _callee() {\n    var _await$supabase$auth$, error;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(supabase.auth.signIn({\n              email: email,\n              password: password\n            }));\n\n          case 2:\n            _await$supabase$auth$ = _context.sent;\n            error = _await$supabase$auth$.error;\n\n            if (error) {\n              Alert.alert('Invalid Email / Password');\n            } else {\n              navigation.navigate(\"NavigationTab\");\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var navigateToSignUp = function navigateToSignUp() {\n    navigation.navigate(\"SignUp\");\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        source: require(\"../assets/logo.png\"),\n        style: {\n          width: 200,\n          height: 220,\n          bottom: 15\n        }\n      }), _jsx(Text, {\n        style: [styles.title, styles.boldText],\n        children: \"NUSinteract\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Email\",\n        KeyboardType: \"email-address\",\n        value: email,\n        onChangeText: setEmail,\n        selectionColor: THEME\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        selectionColor: THEME,\n        secureTextEntry: true\n      }), _jsx(AuthPressable, {\n        onPressHandler: signInWithEmail,\n        title: 'SIGN IN'\n      }), _jsx(AuthPressable, {\n        onPressHandler: navigateToSignUp,\n        title: 'SIGN UP WITH NUS EMAIL'\n      })]\n    })\n  });\n};\n\nexport default SignInScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#7FFFD4',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  textInput: {\n    alignSelf: 'center',\n    borderWidth: 2,\n    borderColor: THEME,\n    borderRadius: 4,\n    width: '80%',\n    height: 40,\n    paddingHorizontal: 8,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: 35,\n    fontFamily: \"AvenirNext-Italic\",\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  boldText: {\n    fontWeight: '500'\n  }\n});","map":{"version":3,"names":["useState","AuthPressable","supabase","THEME","SignInScreen","navigation","email","setEmail","password","setPassword","signInWithEmail","auth","signIn","error","Alert","alert","navigate","navigateToSignUp","Platform","OS","styles","container","require","width","height","bottom","title","boldText","textInput","StyleSheet","create","backgroundColor","justifyContent","alignItems","alignSelf","borderWidth","borderColor","borderRadius","paddingHorizontal","marginBottom","fontSize","fontFamily","textAlign","fontWeight"],"sources":["/Users/hanyang/Orbital2022/screens/SignInScreen.js"],"sourcesContent":["import { \n    StyleSheet,\n    Text,\n    View,\n    KeyboardAvoidingView,\n    Platform, \n    Alert,\n    Image,\n    TextInput,\n} from 'react-native';\n\nimport { useState } from 'react';\n\nimport AuthPressable from '../components/auth/AuthPressable';\n\nimport { supabase } from '../utils/supabase';\n\nconst THEME = '#3F3F3F';\n\nconst SignInScreen = ({ navigation }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const signInWithEmail = async () => {\n        const { error } = await supabase.auth.signIn({\n            email: email,\n            password: password,\n        })\n        if (error) {\n            Alert.alert('Invalid Email / Password')\n        } else {\n            navigation.navigate(\"NavigationTab\")\n        }\n    }\n\n    const navigateToSignUp = () => {\n        navigation.navigate(\"SignUp\")\n    }\n    \n\n    return (\n        <KeyboardAvoidingView\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n\n            <View style={styles.container}>\n             \n                <Image\n                    source = {require('../assets/logo.png')}\n                    style = {{width: 200, height: 220, bottom: 15}}\n                />\n\n                <Text style={[styles.title, styles.boldText]}>\n                    NUSinteract\n                </Text>\n\n                <TextInput\n                    style={styles.textInput}\n                    placeholder='Email' \n                    KeyboardType='email-address'\n                    value={email}\n                    onChangeText={setEmail}\n                    selectionColor={THEME}\n                />\n\n                <TextInput\n                    style={styles.textInput}\n                    placeholder='Password' \n                    value={password}\n                    onChangeText={setPassword}\n                    selectionColor={THEME}\n                    secureTextEntry\n                />\n\n                <AuthPressable\n                    onPressHandler={signInWithEmail}    \n                    title={'SIGN IN'}\n                />\n                <AuthPressable\n                    onPressHandler={navigateToSignUp}    \n                    title={'SIGN UP WITH NUS EMAIL'}\n                />\n            </View>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default SignInScreen; \n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: '#7FFFD4',\n        height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n\n    textInput: {\n        alignSelf: 'center',\n        borderWidth: 2,\n        borderColor: THEME, \n        borderRadius: 4, \n        width: '80%',\n        height: 40, \n        paddingHorizontal: 8, \n        marginBottom: 10\n    },\n\n    \n    title: {\n        fontSize: 35, \n        fontFamily: \"AvenirNext-Italic\",\n        textAlign: 'center',\n        marginBottom: 20\n    },\n\n    boldText: {\n        fontWeight: '500'\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}