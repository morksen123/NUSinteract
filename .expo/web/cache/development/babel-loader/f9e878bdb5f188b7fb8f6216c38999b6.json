{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useContext, useState } from 'react';\nimport { UserContext } from \"../contexts/userContext\";\nimport { supabase } from \"../utils/supabase\";\nimport OutlinedButton from \"../components/Buttons/OutlinedButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar THEME = '#3F3F3F';\n\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      setUser = _useContext.setUser;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var signInWithEmail = function _callee() {\n    var _await$supabase$auth$, user, error;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(supabase.auth.signIn({\n              email: email,\n              password: password\n            }));\n\n          case 2:\n            _await$supabase$auth$ = _context.sent;\n            user = _await$supabase$auth$.user;\n            error = _await$supabase$auth$.error;\n            setUser(user);\n\n            if (error) {\n              Alert.alert('Invalid Email / Password');\n            }\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var navigateToSignUp = function navigateToSignUp() {\n    navigation.navigate(\"SignUp\");\n  };\n\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.imagecontainer,\n        children: _jsx(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: {\n            width: 200,\n            height: 220,\n            bottom: 15\n          }\n        })\n      }), _jsx(Text, {\n        style: [styles.title, styles.boldText],\n        children: \"NUSinteract\"\n      }), _jsxs(View, {\n        style: styles.fillup,\n        children: [_jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"Email\",\n          KeyboardType: \"email-address\",\n          value: email,\n          onChangeText: setEmail,\n          selectionColor: THEME\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: setPassword,\n          selectionColor: THEME,\n          secureTextEntry: true\n        }), _jsxs(View, {\n          style: styles.OutlinedButton,\n          children: [_jsx(OutlinedButton, {\n            icon: \"enter\",\n            onPress: signInWithEmail,\n            children: \"SIGN IN\"\n          }), _jsx(OutlinedButton, {\n            icon: \"document-text\",\n            onPress: navigateToSignUp,\n            children: \"SIGN UP WITH NUS EMAIL\"\n          })]\n        })]\n      })]\n    })\n  });\n};\n\nexport default SignInScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  imagecontainer: {\n    marginLeft: 95\n  },\n  textInput: {\n    alignSelf: 'center',\n    borderWidth: 2,\n    borderColor: THEME,\n    borderRadius: 4,\n    width: '80%',\n    height: 45,\n    paddingHorizontal: 8,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: 35,\n    fontFamily: \"AvenirNext-Italic\",\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  boldText: {\n    fontWeight: '500'\n  },\n  OutlinedButton: {\n    width: '82%',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"names":["useContext","useState","UserContext","supabase","OutlinedButton","THEME","SignInScreen","navigation","setUser","email","setEmail","password","setPassword","signInWithEmail","auth","signIn","user","error","Alert","alert","navigateToSignUp","navigate","Platform","OS","styles","container","imagecontainer","require","width","height","bottom","title","boldText","fillup","textInput","StyleSheet","create","backgroundColor","justifyContent","marginLeft","alignSelf","borderWidth","borderColor","borderRadius","paddingHorizontal","marginBottom","fontSize","fontFamily","textAlign","fontWeight"],"sources":["/Users/hanyang/Orbital2022/screens/SignInScreen.js"],"sourcesContent":["import { \n    StyleSheet,\n    Text,\n    View,\n    KeyboardAvoidingView,\n    Platform, \n    Alert,\n    Image,\n    TextInput,\n} from 'react-native';\n\nimport { useContext, useState } from 'react';\n\nimport { UserContext } from '../contexts/userContext';\n\nimport { supabase } from '../utils/supabase';\n\nimport OutlinedButton from '../components/Buttons/OutlinedButton';\n\nconst THEME = '#3F3F3F';\n\nconst SignInScreen = ({ navigation }) => {\n\n    const { setUser } = useContext(UserContext); \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const signInWithEmail = async () => {\n        const { user, error } = await supabase.auth.signIn({\n            email: email,\n            password: password,\n        })\n\n        setUser(user); \n\n        if (error) {\n            Alert.alert('Invalid Email / Password')\n        } \n    }\n\n    const navigateToSignUp = () => {\n        navigation.navigate(\"SignUp\")\n    }\n    \n\n    return (\n        <KeyboardAvoidingView\n            behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n\n            <View style={styles.container}>\n\n                <View style={styles.imagecontainer}>\n                    <Image\n                        source = {require('../assets/logo.png')}\n                        style = {{width: 200, height: 220, bottom: 15}}\n                    />\n                </View>\n\n                <Text style={[styles.title, styles.boldText]}>\n                    NUSinteract\n                </Text>\n\n                <View style = {styles.fillup}>\n                    <TextInput\n                        style={styles.textInput}\n                        placeholder='Email' \n                        KeyboardType='email-address'\n                        value={email}\n                        onChangeText={setEmail}\n                        selectionColor={THEME}\n                    />\n\n                    <TextInput\n                        style={styles.textInput}\n                        placeholder='Password' \n                        value={password}\n                        onChangeText={setPassword}\n                        selectionColor={THEME}\n                        secureTextEntry\n                    />\n\n                    <View style={styles.OutlinedButton}>\n                        <OutlinedButton \n                            icon=\"enter\"\n                            onPress={signInWithEmail}    \n                            \n                        >\n                            SIGN IN\n                        </OutlinedButton>\n\n                        <OutlinedButton\n                            icon=\"document-text\"\n                            onPress={navigateToSignUp}    \n                            \n                        >\n                            SIGN UP WITH NUS EMAIL\n                        </OutlinedButton>                    \n                    </View>\n\n                    \n\n                </View>\n            </View>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default SignInScreen; \n\nconst styles = StyleSheet.create({\n\n    container: {\n        backgroundColor: 'white',\n        height: '100%',\n        justifyContent: 'center',\n    },\n    imagecontainer:{\n         marginLeft:95,\n    },\n\n    textInput: {\n        alignSelf: 'center',\n        borderWidth: 2,\n        borderColor: THEME, \n        borderRadius: 4, \n        width: '80%',\n        height: 45, \n        paddingHorizontal: 8, \n        marginBottom: 10\n    },\n\n    title: {\n        fontSize: 35, \n        fontFamily: \"AvenirNext-Italic\",\n        textAlign: 'center',\n        marginBottom: 20\n    },\n\n    boldText: {\n        fontWeight: '500'\n    },\n\n    OutlinedButton: {\n        width: '82%',\n        justifyContent: 'center',\n        alignSelf: 'center'\n    }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}