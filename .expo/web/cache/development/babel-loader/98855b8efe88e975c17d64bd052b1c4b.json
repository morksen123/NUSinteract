{"ast":null,"code":"import { Platform } from 'expo-modules-core';\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler(); // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && Platform.isDOMAvailable) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}","map":{"version":3,"sources":["../src/ErrorRecovery.fx.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,mBAAzB;AAEA,SAAS,sBAAT,QAAuC,qBAAvC;AACA,OAAO,iBAAP,MAA8B,qBAA9B;;AAEA,IAAI,QAAQ,CAAC,EAAT,KAAgB,KAApB,EAA2B;EACzB,MAAM,aAAa,GAAG,UAAU,CAAC,gBAAX,EAAtB,CADyB,CAEzB;EACA;;EACA,UAAU,CAAC,gBAAX,CAA4B,OAAO,KAAP,EAAc,OAAd,KAAyB;IACnD,IAAI,iBAAiB,CAAC,iBAAtB,EAAyC;MACvC,MAAM,iBAAiB,CAAC,iBAAlB,CAAoC,sBAAsB,EAA1D,CAAN;IACD;;IACD,aAAa,CAAC,KAAD,EAAQ,OAAR,CAAb;EACD,CALD;AAMD,CAVD,MAUO,IAAI,QAAQ,CAAC,EAAT,KAAgB,KAAhB,IAAyB,QAAQ,CAAC,cAAtC,EAAsD;EAC3D,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,MAAK;IACpC,iBAAiB,CAAC,iBAAlB,CAAoC,sBAAsB,EAA1D;EACD,CAFD;AAGD","sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { getRecoveryPropsToSave } from './ErroRecoveryStore';\nimport ExpoErrorRecovery from './ExpoErrorRecovery';\n\nif (Platform.OS !== 'web') {\n  const globalHandler = ErrorUtils.getGlobalHandler();\n  // ErrorUtils came from react-native\n  // https://github.com/facebook/react-native/blob/1151c096dab17e5d9a6ac05b61aacecd4305f3db/Libraries/vendor/core/ErrorUtils.js#L25\n  ErrorUtils.setGlobalHandler(async (error, isFatal) => {\n    if (ExpoErrorRecovery.saveRecoveryProps) {\n      await ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n    }\n    globalHandler(error, isFatal);\n  });\n} else if (Platform.OS === 'web' && Platform.isDOMAvailable) {\n  window.addEventListener('error', () => {\n    ExpoErrorRecovery.saveRecoveryProps(getRecoveryPropsToSave());\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}