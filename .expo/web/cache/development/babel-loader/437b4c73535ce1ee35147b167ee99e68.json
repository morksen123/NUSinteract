{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"activeProps\", \"swipeToDismiss\", \"useNativeDriver\", \"disabled\", \"renderContent\", \"renderHeader\", \"didOpen\", \"onOpen\", \"willClose\", \"onClose\", \"onLongPress\", \"onLayout\", \"springConfig\", \"backgroundColor\", \"underlayColor\", \"style\", \"dragDismissThreshold\", \"children\", \"modalProps\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useState, cloneElement, Children, isValidElement } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LightboxOverlay from \"./LightboxOverlay\";\nimport { useNextTick } from \"./hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar noop = function noop() {};\n\nvar Lightbox = function Lightbox(_ref) {\n  var activeProps = _ref.activeProps,\n      _ref$swipeToDismiss = _ref.swipeToDismiss,\n      swipeToDismiss = _ref$swipeToDismiss === void 0 ? true : _ref$swipeToDismiss,\n      _ref$useNativeDriver = _ref.useNativeDriver,\n      useNativeDriver = _ref$useNativeDriver === void 0 ? false : _ref$useNativeDriver,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      renderContent = _ref.renderContent,\n      renderHeader = _ref.renderHeader,\n      _ref$didOpen = _ref.didOpen,\n      didOpen = _ref$didOpen === void 0 ? noop : _ref$didOpen,\n      _ref$onOpen = _ref.onOpen,\n      onOpen = _ref$onOpen === void 0 ? noop : _ref$onOpen,\n      _ref$willClose = _ref.willClose,\n      willClose = _ref$willClose === void 0 ? noop : _ref$willClose,\n      _ref$onClose = _ref.onClose,\n      onClose = _ref$onClose === void 0 ? noop : _ref$onClose,\n      _ref$onLongPress = _ref.onLongPress,\n      onLongPress = _ref$onLongPress === void 0 ? noop : _ref$onLongPress,\n      _ref$onLayout = _ref.onLayout,\n      onLayout = _ref$onLayout === void 0 ? noop : _ref$onLayout,\n      _ref$springConfig = _ref.springConfig,\n      springConfig = _ref$springConfig === void 0 ? {\n    tension: 30,\n    friction: 7\n  } : _ref$springConfig,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? \"black\" : _ref$backgroundColor,\n      underlayColor = _ref.underlayColor,\n      style = _ref.style,\n      _ref$dragDismissThres = _ref.dragDismissThreshold,\n      dragDismissThreshold = _ref$dragDismissThres === void 0 ? 150 : _ref$dragDismissThres,\n      children = _ref.children,\n      _ref$modalProps = _ref.modalProps,\n      modalProps = _ref$modalProps === void 0 ? {} : _ref$modalProps,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var layoutOpacity = useRef(new Animated.Value(1));\n\n  var _root = useRef(null);\n\n  var closeNextTick = useNextTick(onClose);\n  var openNextTick = useNextTick(function () {\n    _root.current && layoutOpacity.current.setValue(0);\n  });\n\n  var _useState = useState({\n    isOpen: false,\n    origin: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      _useState2$ = _useState2[0],\n      isOpen = _useState2$.isOpen,\n      origin = _useState2$.origin,\n      setState = _useState2[1];\n\n  var getContent = function getContent() {\n    if (renderContent) return renderContent();else if (activeProps && isValidElement(children)) return cloneElement(Children.only(children), activeProps);\n    return children;\n  };\n\n  var handleOnClose = function handleOnClose() {\n    layoutOpacity.current.setValue(1);\n    setState(function (s) {\n      return _objectSpread(_objectSpread({}, s), {}, {\n        isOpen: false\n      });\n    });\n    closeNextTick();\n  };\n\n  var wrapMeasureWithCallback = function wrapMeasureWithCallback(callback) {\n    _root.current.measure(function (ox, oy, width, height, px, py) {\n      callback({\n        width: width,\n        height: height,\n        x: px,\n        y: py\n      });\n    });\n  };\n\n  var open = function open() {\n    if (!_root.current) return;\n    onOpen();\n    wrapMeasureWithCallback(function (newOrigin) {\n      setState(function (s) {\n        return _objectSpread(_objectSpread({}, s), {}, {\n          isOpen: true,\n          origin: _objectSpread({}, newOrigin)\n        });\n      });\n      openNextTick();\n    });\n  };\n\n  var getOverlayProps = function getOverlayProps() {\n    return _objectSpread({\n      isOpen: isOpen,\n      origin: origin,\n      renderHeader: renderHeader,\n      swipeToDismiss: swipeToDismiss,\n      springConfig: springConfig,\n      backgroundColor: backgroundColor,\n      children: getContent(),\n      didOpen: didOpen,\n      willClose: willClose,\n      onClose: handleOnClose,\n      useNativeDriver: useNativeDriver,\n      dragDismissThreshold: dragDismissThreshold,\n      modalProps: modalProps\n    }, rest);\n  };\n\n  return _jsxs(View, {\n    ref: _root,\n    style: style,\n    onLayout: onLayout,\n    children: [_jsx(Animated.View, {\n      style: {\n        opacity: layoutOpacity.current\n      },\n      children: _jsx(TouchableHighlight, {\n        underlayColor: underlayColor,\n        onPress: open,\n        onLongPress: onLongPress,\n        disabled: disabled,\n        children: children\n      })\n    }), disabled ? null : _jsx(LightboxOverlay, _objectSpread({}, getOverlayProps()))]\n  });\n};\n\nexport default Lightbox;","map":{"version":3,"names":["React","useRef","useState","cloneElement","Children","isValidElement","LightboxOverlay","useNextTick","noop","Lightbox","activeProps","swipeToDismiss","useNativeDriver","disabled","renderContent","renderHeader","didOpen","onOpen","willClose","onClose","onLongPress","onLayout","springConfig","tension","friction","backgroundColor","underlayColor","style","dragDismissThreshold","children","modalProps","rest","layoutOpacity","Animated","Value","_root","closeNextTick","openNextTick","current","setValue","isOpen","origin","x","y","width","height","setState","getContent","only","handleOnClose","s","wrapMeasureWithCallback","callback","measure","ox","oy","px","py","open","newOrigin","getOverlayProps","opacity"],"sources":["/Users/hanyang/Orbital2022/node_modules/react-native-lightbox-v2/dist/Lightbox.js"],"sourcesContent":["import React, { useRef, useState, cloneElement, Children, isValidElement, } from \"react\";\nimport { Animated, TouchableHighlight, View, } from \"react-native\";\nimport LightboxOverlay from \"./LightboxOverlay\";\nimport { useNextTick } from \"./hooks\";\nconst noop = () => { };\nconst Lightbox = ({ activeProps, swipeToDismiss = true, useNativeDriver = false, disabled = false, renderContent, renderHeader, didOpen = noop, onOpen = noop, willClose = noop, onClose = noop, onLongPress = noop, onLayout = noop, springConfig = { tension: 30, friction: 7 }, backgroundColor = \"black\", underlayColor, style, dragDismissThreshold = 150, children, modalProps = {}, ...rest }) => {\n    const layoutOpacity = useRef(new Animated.Value(1));\n    const _root = useRef(null);\n    const closeNextTick = useNextTick(onClose);\n    const openNextTick = useNextTick(() => {\n        _root.current && layoutOpacity.current.setValue(0);\n    });\n    const [{ isOpen, origin }, setState] = useState({\n        isOpen: false,\n        origin: { x: 0, y: 0, width: 0, height: 0 },\n    });\n    const getContent = () => {\n        if (renderContent)\n            return renderContent();\n        else if (activeProps && isValidElement(children))\n            return cloneElement(Children.only(children), activeProps);\n        return children;\n    };\n    const handleOnClose = () => {\n        layoutOpacity.current.setValue(1);\n        setState((s) => ({ ...s, isOpen: false }));\n        closeNextTick();\n    };\n    const wrapMeasureWithCallback = (callback) => {\n        _root.current.measure((ox, oy, width, height, px, py) => {\n            callback({ width, height, x: px, y: py });\n        });\n    };\n    const open = () => {\n        if (!_root.current)\n            return;\n        onOpen();\n        wrapMeasureWithCallback((newOrigin) => {\n            setState((s) => ({\n                ...s,\n                isOpen: true,\n                origin: { ...newOrigin },\n            }));\n            openNextTick();\n        });\n    };\n    const getOverlayProps = () => ({\n        isOpen,\n        origin,\n        renderHeader,\n        swipeToDismiss,\n        springConfig,\n        backgroundColor,\n        children: getContent(),\n        didOpen,\n        willClose,\n        onClose: handleOnClose,\n        useNativeDriver,\n        dragDismissThreshold,\n        modalProps,\n        ...rest,\n    });\n    return (<View ref={_root} style={style} onLayout={onLayout}>\n      <Animated.View style={{ opacity: layoutOpacity.current }}>\n        <TouchableHighlight underlayColor={underlayColor} onPress={open} onLongPress={onLongPress} disabled={disabled}>\n          {children}\n        </TouchableHighlight>\n      </Animated.View>\n      {disabled ? null : <LightboxOverlay {...getOverlayProps()}/>}\n    </View>);\n};\nexport default Lightbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}