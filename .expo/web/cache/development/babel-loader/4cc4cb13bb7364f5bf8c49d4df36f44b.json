{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { URL as whatwgUrl } from 'whatwg-url-without-unicode';\nvar BLOB_URL_PREFIX = null;\nvar BlobModule = NativeModules.BlobModule;\n\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += \"//\" + BlobModule.BLOB_URI_HOST + \"/\";\n  }\n}\n\nwhatwgUrl.createObjectURL = function createObjectURL(blob) {\n  if (BLOB_URL_PREFIX === null) {\n    throw new Error('Cannot create URL for blob!');\n  }\n\n  return \"\" + BLOB_URL_PREFIX + blob.data.blobId + \"?offset=\" + blob.data.offset + \"&size=\" + blob.size;\n};\n\nwhatwgUrl.revokeObjectURL = function revokeObjectURL(url) {};\n\nexport var URL = whatwgUrl;","map":{"version":3,"names":["URL","whatwgUrl","BLOB_URL_PREFIX","BlobModule","NativeModules","BLOB_URI_SCHEME","BLOB_URI_HOST","createObjectURL","blob","Error","data","blobId","offset","size","revokeObjectURL","url"],"sources":["/Users/hanyang/Orbital2022/node_modules/react-native-url-polyfill/js/URL.js"],"sourcesContent":["import {NativeModules} from 'react-native';\nimport {URL as whatwgUrl} from 'whatwg-url-without-unicode';\n\nlet BLOB_URL_PREFIX = null;\n\nconst {BlobModule} = NativeModules;\n\nif (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n  BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n  if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${BlobModule.BLOB_URI_HOST}/`;\n  }\n}\n\n/**\n * To allow Blobs be accessed via `content://` URIs,\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\n *\n * ```xml\n * <manifest>\n *   <application>\n *     <provider\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\n *       android:authorities=\"@string/blob_provider_authority\"\n *       android:exported=\"false\"\n *     />\n *   </application>\n * </manifest>\n * ```\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\n * Use a dotted name that's entirely unique to your app:\n *\n * ```xml\n * <resources>\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\n * </resources>\n * ```\n */\n\nwhatwgUrl.createObjectURL = function createObjectURL(blob) {\n  if (BLOB_URL_PREFIX === null) {\n    throw new Error('Cannot create URL for blob!');\n  }\n  return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\n};\n\nwhatwgUrl.revokeObjectURL = function revokeObjectURL(url) {\n  // Do nothing.\n};\n\nexport const URL = whatwgUrl;\n"],"mappings":";AACA,SAAQA,GAAG,IAAIC,SAAf,QAA+B,4BAA/B;AAEA,IAAIC,eAAe,GAAG,IAAtB;AAEA,IAAOC,UAAP,GAAqBC,aAArB,CAAOD,UAAP;;AAEA,IAAIA,UAAU,IAAI,OAAOA,UAAU,CAACE,eAAlB,KAAsC,QAAxD,EAAkE;EAChEH,eAAe,GAAGC,UAAU,CAACE,eAAX,GAA6B,GAA/C;;EACA,IAAI,OAAOF,UAAU,CAACG,aAAlB,KAAoC,QAAxC,EAAkD;IAChDJ,eAAe,WAASC,UAAU,CAACG,aAApB,MAAf;EACD;AACF;;AA2BDL,SAAS,CAACM,eAAV,GAA4B,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;EACzD,IAAIN,eAAe,KAAK,IAAxB,EAA8B;IAC5B,MAAM,IAAIO,KAAJ,CAAU,6BAAV,CAAN;EACD;;EACD,YAAUP,eAAV,GAA4BM,IAAI,CAACE,IAAL,CAAUC,MAAtC,gBAAuDH,IAAI,CAACE,IAAL,CAAUE,MAAjE,cAAgFJ,IAAI,CAACK,IAArF;AACD,CALD;;AAOAZ,SAAS,CAACa,eAAV,GAA4B,SAASA,eAAT,CAAyBC,GAAzB,EAA8B,CAEzD,CAFD;;AAIA,OAAO,IAAMf,GAAG,GAAGC,SAAZ"},"metadata":{},"sourceType":"module"}