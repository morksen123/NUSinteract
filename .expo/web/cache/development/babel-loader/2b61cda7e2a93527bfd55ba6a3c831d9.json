{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ParsedText from 'react-native-parsed-text';\nimport { StylePropType } from \"./utils\";\nimport { useChatContext } from \"./GiftedChatContext\";\nimport { error } from \"./logging\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WWW_URL_PATTERN = /^www\\./i;\n\nvar _StyleSheet$create = StyleSheet.create({\n  textStyle: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: 10,\n    marginRight: 10\n  }\n}),\n    textStyle = _StyleSheet$create.textStyle;\n\nvar styles = {\n  left: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'black'\n    }, textStyle),\n    link: {\n      color: 'black',\n      textDecorationLine: 'underline'\n    }\n  }),\n  right: StyleSheet.create({\n    container: {},\n    text: _objectSpread({\n      color: 'white'\n    }, textStyle),\n    link: {\n      color: 'white',\n      textDecorationLine: 'underline'\n    }\n  })\n};\nvar DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];\nexport function MessageText(_ref) {\n  var _ref$currentMessage = _ref.currentMessage,\n      currentMessage = _ref$currentMessage === void 0 ? {} : _ref$currentMessage,\n      _ref$optionTitles = _ref.optionTitles,\n      optionTitles = _ref$optionTitles === void 0 ? DEFAULT_OPTION_TITLES : _ref$optionTitles,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'left' : _ref$position,\n      containerStyle = _ref.containerStyle,\n      textStyle = _ref.textStyle,\n      linkStyleProp = _ref.linkStyle,\n      customTextStyle = _ref.customTextStyle,\n      _ref$parsePatterns = _ref.parsePatterns,\n      parsePatterns = _ref$parsePatterns === void 0 ? function () {\n    return [];\n  } : _ref$parsePatterns,\n      textProps = _ref.textProps;\n\n  var _useChatContext = useChatContext(),\n      actionSheet = _useChatContext.actionSheet;\n\n  var onUrlPress = function onUrlPress(url) {\n    if (WWW_URL_PATTERN.test(url)) {\n      onUrlPress(\"https://\" + url);\n    } else {\n      Linking.openURL(url).catch(function (e) {\n        error(e, 'No handler for URL:', url);\n      });\n    }\n  };\n\n  var onPhonePress = function onPhonePress(phone) {\n    var options = optionTitles && optionTitles.length > 0 ? optionTitles.slice(0, 3) : DEFAULT_OPTION_TITLES;\n    var cancelButtonIndex = options.length - 1;\n    actionSheet().showActionSheetWithOptions({\n      options: options,\n      cancelButtonIndex: cancelButtonIndex\n    }, function (buttonIndex) {\n      switch (buttonIndex) {\n        case 0:\n          Linking.openURL(\"tel:\" + phone).catch(function (e) {\n            error(e, 'No handler for telephone');\n          });\n          break;\n\n        case 1:\n          Linking.openURL(\"sms:\" + phone).catch(function (e) {\n            error(e, 'No handler for text');\n          });\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  var onEmailPress = function onEmailPress(email) {\n    return Linking.openURL(\"mailto:\" + email).catch(function (e) {\n      return error(e, 'No handler for mailto');\n    });\n  };\n\n  var linkStyle = [styles[position].link, linkStyleProp && linkStyleProp[position]];\n  return _jsx(View, {\n    style: [styles[position].container, containerStyle && containerStyle[position]],\n    children: _jsx(ParsedText, {\n      style: [styles[position].text, textStyle && textStyle[position], customTextStyle],\n      parse: [].concat(_toConsumableArray(parsePatterns(linkStyle)), [{\n        type: 'url',\n        style: linkStyle,\n        onPress: onUrlPress\n      }, {\n        type: 'phone',\n        style: linkStyle,\n        onPress: onPhonePress\n      }, {\n        type: 'email',\n        style: linkStyle,\n        onPress: onEmailPress\n      }]),\n      childrenProps: _objectSpread({}, textProps),\n      children: currentMessage.text\n    })\n  });\n}\nMessageText.propTypes = {\n  position: PropTypes.oneOf(['left', 'right']),\n  optionTitles: PropTypes.arrayOf(PropTypes.string),\n  currentMessage: PropTypes.object,\n  containerStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  textStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  linkStyle: PropTypes.shape({\n    left: StylePropType,\n    right: StylePropType\n  }),\n  parsePatterns: PropTypes.func,\n  textProps: PropTypes.object,\n  customTextStyle: StylePropType\n};","map":{"version":3,"sources":["../src/MessageText.tsx"],"names":[],"mappings":";;;;;;;AAAA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;;;;AAYA,OAAO,UAAP,MAAuB,0BAAvB;AAEA,SAAS,aAAT;AACA,SAAS,cAAT;AACA,SAAS,KAAT;;AAEA,IAAM,eAAe,GAAG,SAAxB;;AAEA,yBAAsB,UAAU,CAAC,MAAX,CAAkB;EACtC,SAAS,EAAE;IACT,QAAQ,EAAE,EADD;IAET,UAAU,EAAE,EAFH;IAGT,SAAS,EAAE,CAHF;IAIT,YAAY,EAAE,CAJL;IAKT,UAAU,EAAE,EALH;IAMT,WAAW,EAAE;EANJ;AAD2B,CAAlB,CAAtB;AAAA,IAAQ,SAAR,sBAAQ,SAAR;;AAWA,IAAM,MAAM,GAAG;EACb,IAAI,EAAE,UAAU,CAAC,MAAX,CAAkB;IACtB,SAAS,EAAE,EADW;IAEtB,IAAI;MACF,KAAK,EAAE;IADL,GAEC,SAFD,CAFkB;IAMtB,IAAI,EAAE;MACJ,KAAK,EAAE,OADH;MAEJ,kBAAkB,EAAE;IAFhB;EANgB,CAAlB,CADO;EAYb,KAAK,EAAE,UAAU,CAAC,MAAX,CAAkB;IACvB,SAAS,EAAE,EADY;IAEvB,IAAI;MACF,KAAK,EAAE;IADL,GAEC,SAFD,CAFmB;IAMvB,IAAI,EAAE;MACJ,KAAK,EAAE,OADH;MAEJ,kBAAkB,EAAE;IAFhB;EANiB,CAAlB;AAZM,CAAf;AAyBA,IAAM,qBAAqB,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAA9B;AAcA,OAAM,SAAU,WAAV,OAUuB;EAAA,+BAT3B,cAS2B;EAAA,IAT3B,cAS2B,oCATV,EASU;EAAA,6BAR3B,YAQ2B;EAAA,IAR3B,YAQ2B,kCARZ,qBAQY;EAAA,yBAP3B,QAO2B;EAAA,IAP3B,QAO2B,8BAPhB,MAOgB;EAAA,IAN3B,cAM2B,QAN3B,cAM2B;EAAA,IAL3B,SAK2B,QAL3B,SAK2B;EAAA,IAJhB,aAIgB,QAJ3B,SAI2B;EAAA,IAH3B,eAG2B,QAH3B,eAG2B;EAAA,8BAF3B,aAE2B;EAAA,IAF3B,aAE2B,mCAFX;IAAA,OAAM,EAAN;EAAA,CAEW;EAAA,IAD3B,SAC2B,QAD3B,SAC2B;;EAC3B,sBAAwB,cAAc,EAAtC;EAAA,IAAQ,WAAR,mBAAQ,WAAR;;EAWA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,GAAD,EAAgB;IAGjC,IAAI,eAAe,CAAC,IAAhB,CAAqB,GAArB,CAAJ,EAA+B;MAC7B,UAAU,cAAY,GAAZ,CAAV;IACD,CAFD,MAEO;MACL,OAAO,CAAC,OAAR,CAAgB,GAAhB,EAAqB,KAArB,CAA2B,UAAA,CAAC,EAAG;QAC7B,KAAK,CAAC,CAAD,EAAI,qBAAJ,EAA2B,GAA3B,CAAL;MACD,CAFD;IAGD;EACF,CAVD;;EAYA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD,EAAkB;IACrC,IAAM,OAAO,GACX,YAAY,IAAI,YAAY,CAAC,MAAb,GAAsB,CAAtC,GACI,YAAY,CAAC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CADJ,GAEI,qBAHN;IAIA,IAAM,iBAAiB,GAAG,OAAO,CAAC,MAAR,GAAiB,CAA3C;IACA,WAAW,GAAG,0BAAd,CACE;MACE,OAAO,EAAP,OADF;MAEE,iBAAiB,EAAjB;IAFF,CADF,EAKE,UAAC,WAAD,EAAwB;MACtB,QAAQ,WAAR;QACE,KAAK,CAAL;UACE,OAAO,CAAC,OAAR,UAAuB,KAAvB,EAAgC,KAAhC,CAAsC,UAAA,CAAC,EAAG;YACxC,KAAK,CAAC,CAAD,EAAI,0BAAJ,CAAL;UACD,CAFD;UAGA;;QACF,KAAK,CAAL;UACE,OAAO,CAAC,OAAR,UAAuB,KAAvB,EAAgC,KAAhC,CAAsC,UAAA,CAAC,EAAG;YACxC,KAAK,CAAC,CAAD,EAAI,qBAAJ,CAAL;UACD,CAFD;UAGA;;QACF;UACE;MAZJ;IAcD,CApBH;EAsBD,CA5BD;;EA8BA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD;IAAA,OACnB,OAAO,CAAC,OAAR,aAA0B,KAA1B,EAAmC,KAAnC,CAAyC,UAAA,CAAC;MAAA,OACxC,KAAK,CAAC,CAAD,EAAI,uBAAJ,CADmC;IAAA,CAA1C,CADmB;EAAA,CAArB;;EAKA,IAAM,SAAS,GAAG,CAChB,MAAM,CAAC,QAAD,CAAN,CAAiB,IADD,EAEhB,aAAa,IAAI,aAAa,CAAC,QAAD,CAFd,CAAlB;EAIA,OACE,KAAC,IAAD;IACE,KAAK,EAAE,CACL,MAAM,CAAC,QAAD,CAAN,CAAiB,SADZ,EAEL,cAAc,IAAI,cAAc,CAAC,QAAD,CAF3B,CADT;IAAA,UAME,KAAC,UAAD;MACE,KAAK,EAAE,CACL,MAAM,CAAC,QAAD,CAAN,CAAiB,IADZ,EAEL,SAAS,IAAI,SAAS,CAAC,QAAD,CAFjB,EAGL,eAHK,CADT;MAME,KAAK,+BACA,aAAc,CAAC,SAAD,CADd,IAEH;QAAE,IAAI,EAAE,KAAR;QAAe,KAAK,EAAE,SAAtB;QAAiC,OAAO,EAAE;MAA1C,CAFG,EAGH;QAAE,IAAI,EAAE,OAAR;QAAiB,KAAK,EAAE,SAAxB;QAAmC,OAAO,EAAE;MAA5C,CAHG,EAIH;QAAE,IAAI,EAAE,OAAR;QAAiB,KAAK,EAAE,SAAxB;QAAmC,OAAO,EAAE;MAA5C,CAJG,EANP;MAYE,aAAa,oBAAO,SAAP,CAZf;MAAA,UAcG,cAAe,CAAC;IAdnB;EANF,EADF;AAyBD;AAED,WAAW,CAAC,SAAZ,GAAwB;EACtB,QAAQ,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CADY;EAEtB,YAAY,EAAE,SAAS,CAAC,OAAV,CAAkB,SAAS,CAAC,MAA5B,CAFQ;EAGtB,cAAc,EAAE,SAAS,CAAC,MAHJ;EAItB,cAAc,EAAE,SAAS,CAAC,KAAV,CAAgB;IAC9B,IAAI,EAAE,aADwB;IAE9B,KAAK,EAAE;EAFuB,CAAhB,CAJM;EAQtB,SAAS,EAAE,SAAS,CAAC,KAAV,CAAgB;IACzB,IAAI,EAAE,aADmB;IAEzB,KAAK,EAAE;EAFkB,CAAhB,CARW;EAYtB,SAAS,EAAE,SAAS,CAAC,KAAV,CAAgB;IACzB,IAAI,EAAE,aADmB;IAEzB,KAAK,EAAE;EAFkB,CAAhB,CAZW;EAgBtB,aAAa,EAAE,SAAS,CAAC,IAhBH;EAiBtB,SAAS,EAAE,SAAS,CAAC,MAjBC;EAkBtB,eAAe,EAAE;AAlBK,CAAxB","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Linking, StyleSheet, View, } from 'react-native';\n// @ts-ignore\nimport ParsedText from 'react-native-parsed-text';\nimport { StylePropType } from './utils';\nimport { useChatContext } from './GiftedChatContext';\nimport { error } from './logging';\nconst WWW_URL_PATTERN = /^www\\./i;\nconst { textStyle } = StyleSheet.create({\n    textStyle: {\n        fontSize: 16,\n        lineHeight: 20,\n        marginTop: 5,\n        marginBottom: 5,\n        marginLeft: 10,\n        marginRight: 10,\n    },\n});\nconst styles = {\n    left: StyleSheet.create({\n        container: {},\n        text: {\n            color: 'black',\n            ...textStyle,\n        },\n        link: {\n            color: 'black',\n            textDecorationLine: 'underline',\n        },\n    }),\n    right: StyleSheet.create({\n        container: {},\n        text: {\n            color: 'white',\n            ...textStyle,\n        },\n        link: {\n            color: 'white',\n            textDecorationLine: 'underline',\n        },\n    }),\n};\nconst DEFAULT_OPTION_TITLES = ['Call', 'Text', 'Cancel'];\nexport function MessageText({ currentMessage = {}, optionTitles = DEFAULT_OPTION_TITLES, position = 'left', containerStyle, textStyle, linkStyle: linkStyleProp, customTextStyle, parsePatterns = () => [], textProps, }) {\n    const { actionSheet } = useChatContext();\n    // TODO: React.memo\n    // const shouldComponentUpdate = (nextProps: MessageTextProps<TMessage>) => {\n    //   return (\n    //     !!currentMessage &&\n    //     !!nextProps.currentMessage &&\n    //     currentMessage.text !== nextProps.currentMessage.text\n    //   )\n    // }\n    const onUrlPress = (url) => {\n        // When someone sends a message that includes a website address beginning with \"www.\" (omitting the scheme),\n        // react-native-parsed-text recognizes it as a valid url, but Linking fails to open due to the missing scheme.\n        if (WWW_URL_PATTERN.test(url)) {\n            onUrlPress(`https://${url}`);\n        }\n        else {\n            Linking.openURL(url).catch(e => {\n                error(e, 'No handler for URL:', url);\n            });\n        }\n    };\n    const onPhonePress = (phone) => {\n        const options = optionTitles && optionTitles.length > 0\n            ? optionTitles.slice(0, 3)\n            : DEFAULT_OPTION_TITLES;\n        const cancelButtonIndex = options.length - 1;\n        actionSheet().showActionSheetWithOptions({\n            options,\n            cancelButtonIndex,\n        }, (buttonIndex) => {\n            switch (buttonIndex) {\n                case 0:\n                    Linking.openURL(`tel:${phone}`).catch(e => {\n                        error(e, 'No handler for telephone');\n                    });\n                    break;\n                case 1:\n                    Linking.openURL(`sms:${phone}`).catch(e => {\n                        error(e, 'No handler for text');\n                    });\n                    break;\n                default:\n                    break;\n            }\n        });\n    };\n    const onEmailPress = (email) => Linking.openURL(`mailto:${email}`).catch(e => error(e, 'No handler for mailto'));\n    const linkStyle = [\n        styles[position].link,\n        linkStyleProp && linkStyleProp[position],\n    ];\n    return (<View style={[\n            styles[position].container,\n            containerStyle && containerStyle[position],\n        ]}>\n      <ParsedText style={[\n            styles[position].text,\n            textStyle && textStyle[position],\n            customTextStyle,\n        ]} parse={[\n            ...parsePatterns(linkStyle),\n            { type: 'url', style: linkStyle, onPress: onUrlPress },\n            { type: 'phone', style: linkStyle, onPress: onPhonePress },\n            { type: 'email', style: linkStyle, onPress: onEmailPress },\n        ]} childrenProps={{ ...textProps }}>\n        {currentMessage.text}\n      </ParsedText>\n    </View>);\n}\nMessageText.propTypes = {\n    position: PropTypes.oneOf(['left', 'right']),\n    optionTitles: PropTypes.arrayOf(PropTypes.string),\n    currentMessage: PropTypes.object,\n    containerStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    textStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    linkStyle: PropTypes.shape({\n        left: StylePropType,\n        right: StylePropType,\n    }),\n    parsePatterns: PropTypes.func,\n    textProps: PropTypes.object,\n    customTextStyle: StylePropType,\n};\n//# sourceMappingURL=MessageText.js.map"]},"metadata":{},"sourceType":"module"}