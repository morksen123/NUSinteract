{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Color from \"./Color\";\nimport { StylePropType } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 10\n  },\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: Color.defaultColor,\n    borderRadius: 15,\n    height: 30,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  text: {\n    backgroundColor: Color.backgroundTransparent,\n    color: Color.white,\n    fontSize: 12\n  },\n  activityIndicator: {\n    marginTop: Platform.select({\n      ios: -14,\n      android: -16,\n      default: -15\n    })\n  }\n});\nexport function LoadEarlier(_ref) {\n  var _ref$isLoadingEarlier = _ref.isLoadingEarlier,\n      isLoadingEarlier = _ref$isLoadingEarlier === void 0 ? false : _ref$isLoadingEarlier,\n      _ref$onLoadEarlier = _ref.onLoadEarlier,\n      onLoadEarlier = _ref$onLoadEarlier === void 0 ? function () {} : _ref$onLoadEarlier,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? 'Load earlier messages' : _ref$label,\n      containerStyle = _ref.containerStyle,\n      wrapperStyle = _ref.wrapperStyle,\n      textStyle = _ref.textStyle,\n      _ref$activityIndicato = _ref.activityIndicatorColor,\n      activityIndicatorColor = _ref$activityIndicato === void 0 ? 'white' : _ref$activityIndicato,\n      _ref$activityIndicato2 = _ref.activityIndicatorSize,\n      activityIndicatorSize = _ref$activityIndicato2 === void 0 ? 'small' : _ref$activityIndicato2,\n      activityIndicatorStyle = _ref.activityIndicatorStyle;\n  return _jsx(TouchableOpacity, {\n    style: [styles.container, containerStyle],\n    onPress: onLoadEarlier,\n    disabled: isLoadingEarlier,\n    accessibilityRole: \"button\",\n    children: _jsx(View, {\n      style: [styles.wrapper, wrapperStyle],\n      children: isLoadingEarlier ? _jsxs(View, {\n        children: [_jsx(Text, {\n          style: [styles.text, textStyle, {\n            opacity: 0\n          }],\n          children: label\n        }), _jsx(ActivityIndicator, {\n          color: activityIndicatorColor,\n          size: activityIndicatorSize,\n          style: [styles.activityIndicator, activityIndicatorStyle]\n        })]\n      }) : _jsx(Text, {\n        style: [styles.text, textStyle],\n        children: label\n      })\n    })\n  });\n}\nLoadEarlier.propTypes = {\n  onLoadEarlier: PropTypes.func,\n  isLoadingEarlier: PropTypes.bool,\n  label: PropTypes.string,\n  containerStyle: StylePropType,\n  wrapperStyle: StylePropType,\n  textStyle: StylePropType,\n  activityIndicatorStyle: StylePropType,\n  activityIndicatorColor: PropTypes.string,\n  activityIndicatorSize: PropTypes.string\n};","map":{"version":3,"sources":["../src/LoadEarlier.tsx"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;;;;;;;AAYA,OAAO,KAAP;AACA,SAAS,aAAT;;;AAEA,IAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB;EAC/B,SAAS,EAAE;IACT,UAAU,EAAE,QADH;IAET,SAAS,EAAE,CAFF;IAGT,YAAY,EAAE;EAHL,CADoB;EAM/B,OAAO,EAAE;IACP,UAAU,EAAE,QADL;IAEP,cAAc,EAAE,QAFT;IAGP,eAAe,EAAE,KAAK,CAAC,YAHhB;IAIP,YAAY,EAAE,EAJP;IAKP,MAAM,EAAE,EALD;IAMP,WAAW,EAAE,EANN;IAOP,YAAY,EAAE;EAPP,CANsB;EAe/B,IAAI,EAAE;IACJ,eAAe,EAAE,KAAK,CAAC,qBADnB;IAEJ,KAAK,EAAE,KAAK,CAAC,KAFT;IAGJ,QAAQ,EAAE;EAHN,CAfyB;EAoB/B,iBAAiB,EAAE;IACjB,SAAS,EAAE,QAAQ,CAAC,MAAT,CAAgB;MACzB,GAAG,EAAE,CAAC,EADmB;MAEzB,OAAO,EAAE,CAAC,EAFe;MAGzB,OAAO,EAAE,CAAC;IAHe,CAAhB;EADM;AApBY,CAAlB,CAAf;AAyCA,OAAM,SAAU,WAAV,OAUa;EAAA,iCATjB,gBASiB;EAAA,IATjB,gBASiB,sCATE,KASF;EAAA,8BARjB,aAQiB;EAAA,IARjB,aAQiB,mCARD,YAAK,CAAG,CAQP;EAAA,sBAPjB,KAOiB;EAAA,IAPjB,KAOiB,2BAPT,uBAOS;EAAA,IANjB,cAMiB,QANjB,cAMiB;EAAA,IALjB,YAKiB,QALjB,YAKiB;EAAA,IAJjB,SAIiB,QAJjB,SAIiB;EAAA,iCAHjB,sBAGiB;EAAA,IAHjB,sBAGiB,sCAHQ,OAGR;EAAA,kCAFjB,qBAEiB;EAAA,IAFjB,qBAEiB,uCAFO,OAEP;EAAA,IADjB,sBACiB,QADjB,sBACiB;EACjB,OACE,KAAC,gBAAD;IACE,KAAK,EAAE,CAAC,MAAM,CAAC,SAAR,EAAmB,cAAnB,CADT;IAEE,OAAO,EAAE,aAFX;IAGE,QAAQ,EAAE,gBAHZ;IAIE,iBAAiB,EAAC,QAJpB;IAAA,UAME,KAAC,IAAD;MAAM,KAAK,EAAE,CAAC,MAAM,CAAC,OAAR,EAAiB,YAAjB,CAAb;MAAA,UACG,gBAAgB,GACf,MAAC,IAAD;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,EAAyB;YAAE,OAAO,EAAE;UAAX,CAAzB,CAAb;UAAA,UACG;QADH,EADF,EAIE,KAAC,iBAAD;UACE,KAAK,EAAE,sBADT;UAEE,IAAI,EAAE,qBAFR;UAGE,KAAK,EAAE,CAAC,MAAM,CAAC,iBAAR,EAA2B,sBAA3B;QAHT,EAJF;MAAA,EADe,GAYf,KAAC,IAAD;QAAM,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAd,CAAb;QAAA,UAAwC;MAAxC;IAbJ;EANF,EADF;AAyBD;AAED,WAAW,CAAC,SAAZ,GAAwB;EACtB,aAAa,EAAE,SAAS,CAAC,IADH;EAEtB,gBAAgB,EAAE,SAAS,CAAC,IAFN;EAGtB,KAAK,EAAE,SAAS,CAAC,MAHK;EAItB,cAAc,EAAE,aAJM;EAKtB,YAAY,EAAE,aALQ;EAMtB,SAAS,EAAE,aANW;EAOtB,sBAAsB,EAAE,aAPF;EAQtB,sBAAsB,EAAE,SAAS,CAAC,MARZ;EAStB,qBAAqB,EAAE,SAAS,CAAC;AATX,CAAxB","sourceRoot":"","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { ActivityIndicator, Platform, StyleSheet, Text, TouchableOpacity, View, } from 'react-native';\nimport Color from './Color';\nimport { StylePropType } from './utils';\nconst styles = StyleSheet.create({\n    container: {\n        alignItems: 'center',\n        marginTop: 5,\n        marginBottom: 10,\n    },\n    wrapper: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Color.defaultColor,\n        borderRadius: 15,\n        height: 30,\n        paddingLeft: 10,\n        paddingRight: 10,\n    },\n    text: {\n        backgroundColor: Color.backgroundTransparent,\n        color: Color.white,\n        fontSize: 12,\n    },\n    activityIndicator: {\n        marginTop: Platform.select({\n            ios: -14,\n            android: -16,\n            default: -15,\n        }),\n    },\n});\nexport function LoadEarlier({ isLoadingEarlier = false, onLoadEarlier = () => { }, label = 'Load earlier messages', containerStyle, wrapperStyle, textStyle, activityIndicatorColor = 'white', activityIndicatorSize = 'small', activityIndicatorStyle, }) {\n    return (<TouchableOpacity style={[styles.container, containerStyle]} onPress={onLoadEarlier} disabled={isLoadingEarlier} accessibilityRole='button'>\n      <View style={[styles.wrapper, wrapperStyle]}>\n        {isLoadingEarlier ? (<View>\n            <Text style={[styles.text, textStyle, { opacity: 0 }]}>\n              {label}\n            </Text>\n            <ActivityIndicator color={activityIndicatorColor} size={activityIndicatorSize} style={[styles.activityIndicator, activityIndicatorStyle]}/>\n          </View>) : (<Text style={[styles.text, textStyle]}>{label}</Text>)}\n      </View>\n    </TouchableOpacity>);\n}\nLoadEarlier.propTypes = {\n    onLoadEarlier: PropTypes.func,\n    isLoadingEarlier: PropTypes.bool,\n    label: PropTypes.string,\n    containerStyle: StylePropType,\n    wrapperStyle: StylePropType,\n    textStyle: StylePropType,\n    activityIndicatorStyle: StylePropType,\n    activityIndicatorColor: PropTypes.string,\n    activityIndicatorSize: PropTypes.string,\n};\n//# sourceMappingURL=LoadEarlier.js.map"]},"metadata":{},"sourceType":"module"}